/**
 * generated by Xtext 2.12.0
 */
package com.coffee.pLEC.impl;

import com.coffee.pLEC.PLECPackage;
import com.coffee.pLEC.Quantifiable;
import com.coffee.pLEC.VarDeclaration;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Quantifiable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getMinV1 <em>Min V1</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getMaxV1 <em>Max V1</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getVar1 <em>Var1</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getMinV2 <em>Min V2</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getMaxV2 <em>Max V2</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.QuantifiableImpl#getVar2 <em>Var2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QuantifiableImpl extends ConsExpressionImpl implements Quantifiable
{
  /**
   * The cached value of the '{@link #getMinV1() <em>Min V1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinV1()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number minV1;

  /**
   * The cached value of the '{@link #getMaxV1() <em>Max V1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxV1()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number maxV1;

  /**
   * The cached value of the '{@link #getVar1() <em>Var1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar1()
   * @generated
   * @ordered
   */
  protected VarDeclaration var1;

  /**
   * The cached value of the '{@link #getMinV2() <em>Min V2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinV2()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number minV2;

  /**
   * The cached value of the '{@link #getMaxV2() <em>Max V2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxV2()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number maxV2;

  /**
   * The cached value of the '{@link #getVar2() <em>Var2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar2()
   * @generated
   * @ordered
   */
  protected VarDeclaration var2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QuantifiableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PLECPackage.Literals.QUANTIFIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMinV1()
  {
    return minV1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinV1(com.coffee.pLEC.Number newMinV1, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMinV1 = minV1;
    minV1 = newMinV1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MIN_V1, oldMinV1, newMinV1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinV1(com.coffee.pLEC.Number newMinV1)
  {
    if (newMinV1 != minV1)
    {
      NotificationChain msgs = null;
      if (minV1 != null)
        msgs = ((InternalEObject)minV1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MIN_V1, null, msgs);
      if (newMinV1 != null)
        msgs = ((InternalEObject)newMinV1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MIN_V1, null, msgs);
      msgs = basicSetMinV1(newMinV1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MIN_V1, newMinV1, newMinV1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMaxV1()
  {
    return maxV1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaxV1(com.coffee.pLEC.Number newMaxV1, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMaxV1 = maxV1;
    maxV1 = newMaxV1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MAX_V1, oldMaxV1, newMaxV1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxV1(com.coffee.pLEC.Number newMaxV1)
  {
    if (newMaxV1 != maxV1)
    {
      NotificationChain msgs = null;
      if (maxV1 != null)
        msgs = ((InternalEObject)maxV1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MAX_V1, null, msgs);
      if (newMaxV1 != null)
        msgs = ((InternalEObject)newMaxV1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MAX_V1, null, msgs);
      msgs = basicSetMaxV1(newMaxV1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MAX_V1, newMaxV1, newMaxV1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDeclaration getVar1()
  {
    if (var1 != null && var1.eIsProxy())
    {
      InternalEObject oldVar1 = (InternalEObject)var1;
      var1 = (VarDeclaration)eResolveProxy(oldVar1);
      if (var1 != oldVar1)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PLECPackage.QUANTIFIABLE__VAR1, oldVar1, var1));
      }
    }
    return var1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDeclaration basicGetVar1()
  {
    return var1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar1(VarDeclaration newVar1)
  {
    VarDeclaration oldVar1 = var1;
    var1 = newVar1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__VAR1, oldVar1, var1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMinV2()
  {
    return minV2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinV2(com.coffee.pLEC.Number newMinV2, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMinV2 = minV2;
    minV2 = newMinV2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MIN_V2, oldMinV2, newMinV2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinV2(com.coffee.pLEC.Number newMinV2)
  {
    if (newMinV2 != minV2)
    {
      NotificationChain msgs = null;
      if (minV2 != null)
        msgs = ((InternalEObject)minV2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MIN_V2, null, msgs);
      if (newMinV2 != null)
        msgs = ((InternalEObject)newMinV2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MIN_V2, null, msgs);
      msgs = basicSetMinV2(newMinV2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MIN_V2, newMinV2, newMinV2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMaxV2()
  {
    return maxV2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaxV2(com.coffee.pLEC.Number newMaxV2, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMaxV2 = maxV2;
    maxV2 = newMaxV2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MAX_V2, oldMaxV2, newMaxV2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxV2(com.coffee.pLEC.Number newMaxV2)
  {
    if (newMaxV2 != maxV2)
    {
      NotificationChain msgs = null;
      if (maxV2 != null)
        msgs = ((InternalEObject)maxV2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MAX_V2, null, msgs);
      if (newMaxV2 != null)
        msgs = ((InternalEObject)newMaxV2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.QUANTIFIABLE__MAX_V2, null, msgs);
      msgs = basicSetMaxV2(newMaxV2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__MAX_V2, newMaxV2, newMaxV2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDeclaration getVar2()
  {
    if (var2 != null && var2.eIsProxy())
    {
      InternalEObject oldVar2 = (InternalEObject)var2;
      var2 = (VarDeclaration)eResolveProxy(oldVar2);
      if (var2 != oldVar2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PLECPackage.QUANTIFIABLE__VAR2, oldVar2, var2));
      }
    }
    return var2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDeclaration basicGetVar2()
  {
    return var2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVar2(VarDeclaration newVar2)
  {
    VarDeclaration oldVar2 = var2;
    var2 = newVar2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.QUANTIFIABLE__VAR2, oldVar2, var2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PLECPackage.QUANTIFIABLE__MIN_V1:
        return basicSetMinV1(null, msgs);
      case PLECPackage.QUANTIFIABLE__MAX_V1:
        return basicSetMaxV1(null, msgs);
      case PLECPackage.QUANTIFIABLE__MIN_V2:
        return basicSetMinV2(null, msgs);
      case PLECPackage.QUANTIFIABLE__MAX_V2:
        return basicSetMaxV2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PLECPackage.QUANTIFIABLE__MIN_V1:
        return getMinV1();
      case PLECPackage.QUANTIFIABLE__MAX_V1:
        return getMaxV1();
      case PLECPackage.QUANTIFIABLE__VAR1:
        if (resolve) return getVar1();
        return basicGetVar1();
      case PLECPackage.QUANTIFIABLE__MIN_V2:
        return getMinV2();
      case PLECPackage.QUANTIFIABLE__MAX_V2:
        return getMaxV2();
      case PLECPackage.QUANTIFIABLE__VAR2:
        if (resolve) return getVar2();
        return basicGetVar2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PLECPackage.QUANTIFIABLE__MIN_V1:
        setMinV1((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.QUANTIFIABLE__MAX_V1:
        setMaxV1((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.QUANTIFIABLE__VAR1:
        setVar1((VarDeclaration)newValue);
        return;
      case PLECPackage.QUANTIFIABLE__MIN_V2:
        setMinV2((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.QUANTIFIABLE__MAX_V2:
        setMaxV2((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.QUANTIFIABLE__VAR2:
        setVar2((VarDeclaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PLECPackage.QUANTIFIABLE__MIN_V1:
        setMinV1((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.QUANTIFIABLE__MAX_V1:
        setMaxV1((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.QUANTIFIABLE__VAR1:
        setVar1((VarDeclaration)null);
        return;
      case PLECPackage.QUANTIFIABLE__MIN_V2:
        setMinV2((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.QUANTIFIABLE__MAX_V2:
        setMaxV2((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.QUANTIFIABLE__VAR2:
        setVar2((VarDeclaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PLECPackage.QUANTIFIABLE__MIN_V1:
        return minV1 != null;
      case PLECPackage.QUANTIFIABLE__MAX_V1:
        return maxV1 != null;
      case PLECPackage.QUANTIFIABLE__VAR1:
        return var1 != null;
      case PLECPackage.QUANTIFIABLE__MIN_V2:
        return minV2 != null;
      case PLECPackage.QUANTIFIABLE__MAX_V2:
        return maxV2 != null;
      case PLECPackage.QUANTIFIABLE__VAR2:
        return var2 != null;
    }
    return super.eIsSet(featureID);
  }

} //QuantifiableImpl
