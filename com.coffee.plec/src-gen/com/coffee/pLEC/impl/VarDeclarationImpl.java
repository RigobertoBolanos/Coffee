/**
 * generated by Xtext 2.12.0
 */
package com.coffee.pLEC.impl;

import com.coffee.pLEC.PLECPackage;
import com.coffee.pLEC.VarDeclaration;
import com.coffee.pLEC.VariantDeclaration;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Var Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getInstantiable <em>Instantiable</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getMin <em>Min</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getMax <em>Max</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getType <em>Type</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.coffee.pLEC.impl.VarDeclarationImpl#getVariants <em>Variants</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VarDeclarationImpl extends MinimalEObjectImpl.Container implements VarDeclaration
{
  /**
   * The default value of the '{@link #getInstantiable() <em>Instantiable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstantiable()
   * @generated
   * @ordered
   */
  protected static final String INSTANTIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInstantiable() <em>Instantiable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstantiable()
   * @generated
   * @ordered
   */
  protected String instantiable = INSTANTIABLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getMin() <em>Min</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number min;

  /**
   * The cached value of the '{@link #getMax() <em>Max</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMax()
   * @generated
   * @ordered
   */
  protected com.coffee.pLEC.Number max;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariants() <em>Variants</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariants()
   * @generated
   * @ordered
   */
  protected VariantDeclaration variants;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VarDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PLECPackage.Literals.VAR_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInstantiable()
  {
    return instantiable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInstantiable(String newInstantiable)
  {
    String oldInstantiable = instantiable;
    instantiable = newInstantiable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__INSTANTIABLE, oldInstantiable, instantiable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMin()
  {
    return min;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMin(com.coffee.pLEC.Number newMin, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMin = min;
    min = newMin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__MIN, oldMin, newMin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMin(com.coffee.pLEC.Number newMin)
  {
    if (newMin != min)
    {
      NotificationChain msgs = null;
      if (min != null)
        msgs = ((InternalEObject)min).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__MIN, null, msgs);
      if (newMin != null)
        msgs = ((InternalEObject)newMin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__MIN, null, msgs);
      msgs = basicSetMin(newMin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__MIN, newMin, newMin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.coffee.pLEC.Number getMax()
  {
    return max;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMax(com.coffee.pLEC.Number newMax, NotificationChain msgs)
  {
    com.coffee.pLEC.Number oldMax = max;
    max = newMax;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__MAX, oldMax, newMax);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMax(com.coffee.pLEC.Number newMax)
  {
    if (newMax != max)
    {
      NotificationChain msgs = null;
      if (max != null)
        msgs = ((InternalEObject)max).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__MAX, null, msgs);
      if (newMax != null)
        msgs = ((InternalEObject)newMax).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__MAX, null, msgs);
      msgs = basicSetMax(newMax, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__MAX, newMax, newMax));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariantDeclaration getVariants()
  {
    return variants;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariants(VariantDeclaration newVariants, NotificationChain msgs)
  {
    VariantDeclaration oldVariants = variants;
    variants = newVariants;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__VARIANTS, oldVariants, newVariants);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariants(VariantDeclaration newVariants)
  {
    if (newVariants != variants)
    {
      NotificationChain msgs = null;
      if (variants != null)
        msgs = ((InternalEObject)variants).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__VARIANTS, null, msgs);
      if (newVariants != null)
        msgs = ((InternalEObject)newVariants).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PLECPackage.VAR_DECLARATION__VARIANTS, null, msgs);
      msgs = basicSetVariants(newVariants, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PLECPackage.VAR_DECLARATION__VARIANTS, newVariants, newVariants));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PLECPackage.VAR_DECLARATION__MIN:
        return basicSetMin(null, msgs);
      case PLECPackage.VAR_DECLARATION__MAX:
        return basicSetMax(null, msgs);
      case PLECPackage.VAR_DECLARATION__VARIANTS:
        return basicSetVariants(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PLECPackage.VAR_DECLARATION__INSTANTIABLE:
        return getInstantiable();
      case PLECPackage.VAR_DECLARATION__MIN:
        return getMin();
      case PLECPackage.VAR_DECLARATION__MAX:
        return getMax();
      case PLECPackage.VAR_DECLARATION__TYPE:
        return getType();
      case PLECPackage.VAR_DECLARATION__NAME:
        return getName();
      case PLECPackage.VAR_DECLARATION__VARIANTS:
        return getVariants();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PLECPackage.VAR_DECLARATION__INSTANTIABLE:
        setInstantiable((String)newValue);
        return;
      case PLECPackage.VAR_DECLARATION__MIN:
        setMin((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.VAR_DECLARATION__MAX:
        setMax((com.coffee.pLEC.Number)newValue);
        return;
      case PLECPackage.VAR_DECLARATION__TYPE:
        setType((String)newValue);
        return;
      case PLECPackage.VAR_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case PLECPackage.VAR_DECLARATION__VARIANTS:
        setVariants((VariantDeclaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PLECPackage.VAR_DECLARATION__INSTANTIABLE:
        setInstantiable(INSTANTIABLE_EDEFAULT);
        return;
      case PLECPackage.VAR_DECLARATION__MIN:
        setMin((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.VAR_DECLARATION__MAX:
        setMax((com.coffee.pLEC.Number)null);
        return;
      case PLECPackage.VAR_DECLARATION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case PLECPackage.VAR_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PLECPackage.VAR_DECLARATION__VARIANTS:
        setVariants((VariantDeclaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PLECPackage.VAR_DECLARATION__INSTANTIABLE:
        return INSTANTIABLE_EDEFAULT == null ? instantiable != null : !INSTANTIABLE_EDEFAULT.equals(instantiable);
      case PLECPackage.VAR_DECLARATION__MIN:
        return min != null;
      case PLECPackage.VAR_DECLARATION__MAX:
        return max != null;
      case PLECPackage.VAR_DECLARATION__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case PLECPackage.VAR_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PLECPackage.VAR_DECLARATION__VARIANTS:
        return variants != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (instantiable: ");
    result.append(instantiable);
    result.append(", type: ");
    result.append(type);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //VarDeclarationImpl
