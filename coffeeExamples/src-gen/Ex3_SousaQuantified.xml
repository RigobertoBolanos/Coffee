<instance format="XCSP3" type="CSP"> Ex3_SousaQuantified
<variables>
<var id="A">0 1</var>
<var id="B">0 1</var>
<var id="B_card"> 1..2</var>
declareInstance(A_B1) 
declareInstance(A_B2) 
<var id="C">0 1</var>
<var id="C_card"> 1..20</var>
declareInstance(A_B1_C1) 
declareInstance(A_B1_C2) 
declareInstance(A_B1_C3) 
declareInstance(A_B1_C4) 
declareInstance(A_B1_C5) 
declareInstance(A_B1_C6) 
declareInstance(A_B1_C7) 
declareInstance(A_B1_C8) 
declareInstance(A_B1_C9) 
declareInstance(A_B1_C10) 
declareInstance(A_B2_C1) 
declareInstance(A_B2_C2) 
declareInstance(A_B2_C3) 
declareInstance(A_B2_C4) 
declareInstance(A_B2_C5) 
declareInstance(A_B2_C6) 
declareInstance(A_B2_C7) 
declareInstance(A_B2_C8) 
declareInstance(A_B2_C9) 
declareInstance(A_B2_C10) 
<var id="D">0 1</var>
<var id="D_card"> 1..4</var>
declareInstance(A_B1_D1) 
declareInstance(A_B1_D2) 
declareInstance(A_B2_D1) 
declareInstance(A_B2_D2) 
<var id="E">0 1</var>
<var id="E_card"> 1..8</var>
declareInstance(A_B1_D1_E1) 
declareInstance(A_B1_D1_E2) 
declareInstance(A_B1_D2_E1) 
declareInstance(A_B1_D2_E2) 
declareInstance(A_B2_D1_E1) 
declareInstance(A_B2_D1_E2) 
declareInstance(A_B2_D2_E1) 
declareInstance(A_B2_D2_E2) 
<constraints>
<intension id= "c0""> 
	eq(A, 1)
</intension>
<intension id= "ac_0"> 
	eq(B_card, add(add( A_B1 , A_B2 ) )) 
</intension>
<intension id= "ac_1">
	lq(1, add(add( A_B1 , A_B2 ) ))
</intension>
<intension id= "ac_2">
	gq(2, add(add( A_B1 , A_B2 ) ))
</intension>
<intension id= "ac_3">
	iff(B, B_card >0)
</intension>
<intension id= "ac_4">
	imp(A_B1, 
	and(le(1, add( A_B1_D1 , A_B1_D2 )),
	ge(2, add( A_B1_D1 , A_B1_D2 ))))
</intension>
<intension id= "ac_5">
	imp(A_B2, 
	and(le(1, add( A_B2_D1 , A_B2_D2 )),
	ge(2, add( A_B2_D1 , A_B2_D2 ))))
</intension>
<intension id= "ac_6"> 
	eq(D_card, add(add( A_B1_D1 , A_B1_D2 ) ,add( A_B2_D1 , A_B2_D2 ) )) 
</intension>
<intension id= "ac_7">
	lq(1, add(add( A_B1_D1 , A_B1_D2 ) ,add( A_B2_D1 , A_B2_D2 ) ))
</intension>
<intension id= "ac_8">
	gq(4, add(add( A_B1_D1 , A_B1_D2 ) ,add( A_B2_D1 , A_B2_D2 ) ))
</intension>
<intension id= "ac_9">
	iff(D, D_card >0)
</intension>
<intension id= "ac_10">
	imp(A_B1, 
	and(le(1, add( A_B1_C1 , A_B1_C2 , A_B1_C3 , A_B1_C4 , A_B1_C5 , A_B1_C6 , A_B1_C7 , A_B1_C8 , A_B1_C9 , A_B1_C10 )),
	ge(10, add( A_B1_C1 , A_B1_C2 , A_B1_C3 , A_B1_C4 , A_B1_C5 , A_B1_C6 , A_B1_C7 , A_B1_C8 , A_B1_C9 , A_B1_C10 ))))
</intension>
<intension id= "ac_11">
	imp(A_B2, 
	and(le(1, add( A_B2_C1 , A_B2_C2 , A_B2_C3 , A_B2_C4 , A_B2_C5 , A_B2_C6 , A_B2_C7 , A_B2_C8 , A_B2_C9 , A_B2_C10 )),
	ge(10, add( A_B2_C1 , A_B2_C2 , A_B2_C3 , A_B2_C4 , A_B2_C5 , A_B2_C6 , A_B2_C7 , A_B2_C8 , A_B2_C9 , A_B2_C10 ))))
</intension>
<intension id= "ac_12"> 
	eq(C_card, add(add( A_B1_C1 , A_B1_C2 , A_B1_C3 , A_B1_C4 , A_B1_C5 , A_B1_C6 , A_B1_C7 , A_B1_C8 , A_B1_C9 , A_B1_C10 ) ,add( A_B2_C1 , A_B2_C2 , A_B2_C3 , A_B2_C4 , A_B2_C5 , A_B2_C6 , A_B2_C7 , A_B2_C8 , A_B2_C9 , A_B2_C10 ) )) 
</intension>
<intension id= "ac_13">
	lq(1, add(add( A_B1_C1 , A_B1_C2 , A_B1_C3 , A_B1_C4 , A_B1_C5 , A_B1_C6 , A_B1_C7 , A_B1_C8 , A_B1_C9 , A_B1_C10 ) ,add( A_B2_C1 , A_B2_C2 , A_B2_C3 , A_B2_C4 , A_B2_C5 , A_B2_C6 , A_B2_C7 , A_B2_C8 , A_B2_C9 , A_B2_C10 ) ))
</intension>
<intension id= "ac_14">
	gq(20, add(add( A_B1_C1 , A_B1_C2 , A_B1_C3 , A_B1_C4 , A_B1_C5 , A_B1_C6 , A_B1_C7 , A_B1_C8 , A_B1_C9 , A_B1_C10 ) ,add( A_B2_C1 , A_B2_C2 , A_B2_C3 , A_B2_C4 , A_B2_C5 , A_B2_C6 , A_B2_C7 , A_B2_C8 , A_B2_C9 , A_B2_C10 ) ))
</intension>
<intension id= "ac_15">
	iff(C, C_card >0)
</intension>
<intension id= "ac_16">
	imp(A_B1_D1, 
	and(le(1, add( A_B1_D1_E1 , A_B1_D1_E2 )),
	ge(2, add( A_B1_D1_E1 , A_B1_D1_E2 ))))
</intension>
<intension id= "ac_17">
	imp(A_B1_D2, 
	and(le(1, add( A_B1_D2_E1 , A_B1_D2_E2 )),
	ge(2, add( A_B1_D2_E1 , A_B1_D2_E2 ))))
</intension>
<intension id= "ac_18">
	imp(A_B2_D1, 
	and(le(1, add( A_B2_D1_E1 , A_B2_D1_E2 )),
	ge(2, add( A_B2_D1_E1 , A_B2_D1_E2 ))))
</intension>
<intension id= "ac_19">
	imp(A_B2_D2, 
	and(le(1, add( A_B2_D2_E1 , A_B2_D2_E2 )),
	ge(2, add( A_B2_D2_E1 , A_B2_D2_E2 ))))
</intension>
<intension id= "ac_20"> 
	eq(E_card, add(add( A_B1_D1_E1 , A_B1_D1_E2 ) ,add( A_B1_D2_E1 , A_B1_D2_E2 ) ,add( A_B2_D1_E1 , A_B2_D1_E2 ) ,add( A_B2_D2_E1 , A_B2_D2_E2 ) )) 
</intension>
<intension id= "ac_21">
	lq(1, add(add( A_B1_D1_E1 , A_B1_D1_E2 ) ,add( A_B1_D2_E1 , A_B1_D2_E2 ) ,add( A_B2_D1_E1 , A_B2_D1_E2 ) ,add( A_B2_D2_E1 , A_B2_D2_E2 ) ))
</intension>
<intension id= "ac_22">
	gq(8, add(add( A_B1_D1_E1 , A_B1_D1_E2 ) ,add( A_B1_D2_E1 , A_B1_D2_E2 ) ,add( A_B2_D1_E1 , A_B2_D1_E2 ) ,add( A_B2_D2_E1 , A_B2_D2_E2 ) ))
</intension>
<intension id= "ac_23">
	iff(E, E_card >0)
</intension>
<intension id= "c4" >
	imp(
	and(lq(5,C_card), lq(C_card, 10)), 
	and(lq(2,E_card), lq(E_card, 2)))
</intension>
