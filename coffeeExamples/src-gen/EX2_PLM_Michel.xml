<instance format="XCSP3" type="CSP"> 
<variables>
<var id="Binding">0 1</var>
<var id="Booklet">0 1</var>
<var id="Left">0 1</var>
<var id="Landscape">0 1</var>
<var id="Landscape_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Orientation1_Landscape1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Orientation1_Landscape1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Orientation1_Landscape1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Orientation1_Landscape1"> 0 1 </var>
<var id="Front">0 1</var>
<var id="Front_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Side1_Front1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Side1_Front1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Side1_Front1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Side1_Front1"> 0 1 </var>
<var id="Right">0 1</var>
<var id="Portrait">0 1</var>
<var id="Portrait_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Orientation1_Portrait1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Orientation1_Portrait1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Orientation1_Portrait1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Orientation1_Portrait1"> 0 1 </var>
<var id="Page">0 1</var>
<var id="Page_card"> 0..4</var>
<var id="Document_Sheet1_Page1"> 0 1 </var>
<var id="Document_Sheet1_Page2"> 0 1 </var>
<var id="Document_Sheet2_Page1"> 0 1 </var>
<var id="Document_Sheet2_Page2"> 0 1 </var>
<var id="Document">0 1</var>
<var id="Normal">0 1</var>
<var id="Orientation">0 1</var>
<var id="Orientation_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Orientation1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Orientation1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Orientation1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Orientation1"> 0 1 </var>
<var id="Side">0 1</var>
<var id="Side_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Side1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Side1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Side1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Side1"> 0 1 </var>
<var id="Type">0 1</var>
<var id="Top">0 1</var>
<var id="Back">0 1</var>
<var id="Back_card"> 1..4</var>
<var id="Document_Sheet1_Page1_Side1_Back1"> 0 1 </var>
<var id="Document_Sheet1_Page2_Side1_Back1"> 0 1 </var>
<var id="Document_Sheet2_Page1_Side1_Back1"> 0 1 </var>
<var id="Document_Sheet2_Page2_Side1_Back1"> 0 1 </var>
<var id="Sheet">0 1</var>
<var id="Sheet_card"> 1..2</var>
<var id="Document_Sheet1"> 0 1 </var>
<var id="Document_Sheet2"> 0 1 </var>
<var id="Folding">0 1</var>
<var id="Folding_card"> 1..2</var>
<var id="Document_Sheet1_Folding1"> 0 1 </var>
<var id="Document_Sheet2_Folding1"> 0 1 </var>
</variables>
<constraints>
<intension id="C0"> 
	eq(Document, 1)
</intension>
<intension id="ac_0"> 
	eq(Sheet_card, add(add( Document_Sheet1 , Document_Sheet2 ) )) 
</intension>
<intension id="ac_1">
	le(1, add(add( Document_Sheet1 , Document_Sheet2 ) ))
</intension>
<intension id="ac_2">
	ge(2, add(add( Document_Sheet1 , Document_Sheet2 ) ))
</intension>
<intension id="ac_3">
	iff(Sheet, gt(Sheet_card,0))
</intension>
<intension id= "c1_1" >
	eq(Document, Type)
</intension>
<intension id= "c1_2" >
	ge(Document, Binding)
</intension>
<intension id= "c2" >
	and(imp(Normal, Type),imp(Booklet, Type), imp(ge(Type, 1), and(le(add(Normal, Booklet), 1), ge(add(Normal, Booklet), 1))) )
</intension>
<intension id= "c3" >
	and(imp(Top, Binding),imp(Left, Binding),imp(Right, Binding), imp(ge(Binding, 1), and(le(add(Top, Left, Right), 1), ge(add(Top, Left, Right), 1))) )
</intension>
<intension id= "ac_4">
	imp(Document_Sheet1, 
	and(le(0, add( Document_Sheet1_Page1 , Document_Sheet1_Page2 )),
	ge(2, add( Document_Sheet1_Page1 , Document_Sheet1_Page2 ))))
</intension>
<intension id= "ac_5">
	imp(Document_Sheet2, 
	and(le(0, add( Document_Sheet2_Page1 , Document_Sheet2_Page2 )),
	ge(2, add( Document_Sheet2_Page1 , Document_Sheet2_Page2 ))))
</intension>
<intension id="ac_6"> 
	eq(Page_card, add(add( Document_Sheet1_Page1 , Document_Sheet1_Page2 ) ,add( Document_Sheet2_Page1 , Document_Sheet2_Page2 ) )) 
</intension>
<intension id="ac_7">
	le(0, add(add( Document_Sheet1_Page1 , Document_Sheet1_Page2 ) ,add( Document_Sheet2_Page1 , Document_Sheet2_Page2 ) ))
</intension>
<intension id="ac_8">
	ge(4, add(add( Document_Sheet1_Page1 , Document_Sheet1_Page2 ) ,add( Document_Sheet2_Page1 , Document_Sheet2_Page2 ) ))
</intension>
<intension id="ac_9">
	iff(Page, gt(Page_card,0))
</intension>
<intension id= "ac_10">
	imp(Document_Sheet1, 
	and(le(1, add( Document_Sheet1_Folding1 )),
	ge(1, add( Document_Sheet1_Folding1 ))))
</intension>
<intension id= "ac_11">
	imp(Document_Sheet2, 
	and(le(1, add( Document_Sheet2_Folding1 )),
	ge(1, add( Document_Sheet2_Folding1 ))))
</intension>
<intension id="ac_12"> 
	eq(Folding_card, add(add( Document_Sheet1_Folding1 ) ,add( Document_Sheet2_Folding1 ) )) 
</intension>
<intension id="ac_13">
	le(1, add(add( Document_Sheet1_Folding1 ) ,add( Document_Sheet2_Folding1 ) ))
</intension>
<intension id="ac_14">
	ge(2, add(add( Document_Sheet1_Folding1 ) ,add( Document_Sheet2_Folding1 ) ))
</intension>
<intension id="ac_15">
	iff(Folding, gt(Folding_card,0))
</intension>
<intension id= "c4_1" >
	ge(Sheet, Folding)
</intension>
<intension id= "c4_2" >
	eq(Sheet, Page)
</intension>
<intension id= "ac_16">
	imp(Document_Sheet1_Page1, 
	and(le(1, add( Document_Sheet1_Page1_Orientation1 )),
	ge(1, add( Document_Sheet1_Page1_Orientation1 ))))
</intension>
<intension id= "ac_17">
	imp(Document_Sheet1_Page2, 
	and(le(1, add( Document_Sheet1_Page2_Orientation1 )),
	ge(1, add( Document_Sheet1_Page2_Orientation1 ))))
</intension>
<intension id= "ac_18">
	imp(Document_Sheet2_Page1, 
	and(le(1, add( Document_Sheet2_Page1_Orientation1 )),
	ge(1, add( Document_Sheet2_Page1_Orientation1 ))))
</intension>
<intension id= "ac_19">
	imp(Document_Sheet2_Page2, 
	and(le(1, add( Document_Sheet2_Page2_Orientation1 )),
	ge(1, add( Document_Sheet2_Page2_Orientation1 ))))
</intension>
<intension id="ac_20"> 
	eq(Orientation_card, add(add( Document_Sheet1_Page1_Orientation1 ) ,add( Document_Sheet1_Page2_Orientation1 ) ,add( Document_Sheet2_Page1_Orientation1 ) ,add( Document_Sheet2_Page2_Orientation1 ) )) 
</intension>
<intension id="ac_21">
	le(1, add(add( Document_Sheet1_Page1_Orientation1 ) ,add( Document_Sheet1_Page2_Orientation1 ) ,add( Document_Sheet2_Page1_Orientation1 ) ,add( Document_Sheet2_Page2_Orientation1 ) ))
</intension>
<intension id="ac_22">
	ge(4, add(add( Document_Sheet1_Page1_Orientation1 ) ,add( Document_Sheet1_Page2_Orientation1 ) ,add( Document_Sheet2_Page1_Orientation1 ) ,add( Document_Sheet2_Page2_Orientation1 ) ))
</intension>
<intension id="ac_23">
	iff(Orientation, gt(Orientation_card,0))
</intension>
<intension id= "ac_24">
	imp(Document_Sheet1_Page1, 
	and(le(1, add( Document_Sheet1_Page1_Side1 )),
	ge(1, add( Document_Sheet1_Page1_Side1 ))))
</intension>
<intension id= "ac_25">
	imp(Document_Sheet1_Page2, 
	and(le(1, add( Document_Sheet1_Page2_Side1 )),
	ge(1, add( Document_Sheet1_Page2_Side1 ))))
</intension>
<intension id= "ac_26">
	imp(Document_Sheet2_Page1, 
	and(le(1, add( Document_Sheet2_Page1_Side1 )),
	ge(1, add( Document_Sheet2_Page1_Side1 ))))
</intension>
<intension id= "ac_27">
	imp(Document_Sheet2_Page2, 
	and(le(1, add( Document_Sheet2_Page2_Side1 )),
	ge(1, add( Document_Sheet2_Page2_Side1 ))))
</intension>
<intension id="ac_28"> 
	eq(Side_card, add(add( Document_Sheet1_Page1_Side1 ) ,add( Document_Sheet1_Page2_Side1 ) ,add( Document_Sheet2_Page1_Side1 ) ,add( Document_Sheet2_Page2_Side1 ) )) 
</intension>
<intension id="ac_29">
	le(1, add(add( Document_Sheet1_Page1_Side1 ) ,add( Document_Sheet1_Page2_Side1 ) ,add( Document_Sheet2_Page1_Side1 ) ,add( Document_Sheet2_Page2_Side1 ) ))
</intension>
<intension id="ac_30">
	ge(4, add(add( Document_Sheet1_Page1_Side1 ) ,add( Document_Sheet1_Page2_Side1 ) ,add( Document_Sheet2_Page1_Side1 ) ,add( Document_Sheet2_Page2_Side1 ) ))
</intension>
<intension id="ac_31">
	iff(Side, gt(Side_card,0))
</intension>
<intension id= "c5_1" >
	eq(Page, Orientation)
</intension>
<intension id= "c5_2" >
	ge(Page, Side)
</intension>
<intension id= "ac_32">
	imp(Document_Sheet1_Page1_Orientation1, 
	and(le(1, add( Document_Sheet1_Page1_Orientation1_Landscape1 )),
	ge(1, add( Document_Sheet1_Page1_Orientation1_Landscape1 ))))
</intension>
<intension id= "ac_33">
	imp(Document_Sheet1_Page2_Orientation1, 
	and(le(1, add( Document_Sheet1_Page2_Orientation1_Landscape1 )),
	ge(1, add( Document_Sheet1_Page2_Orientation1_Landscape1 ))))
</intension>
<intension id= "ac_34">
	imp(Document_Sheet2_Page1_Orientation1, 
	and(le(1, add( Document_Sheet2_Page1_Orientation1_Landscape1 )),
	ge(1, add( Document_Sheet2_Page1_Orientation1_Landscape1 ))))
</intension>
<intension id= "ac_35">
	imp(Document_Sheet2_Page2_Orientation1, 
	and(le(1, add( Document_Sheet2_Page2_Orientation1_Landscape1 )),
	ge(1, add( Document_Sheet2_Page2_Orientation1_Landscape1 ))))
</intension>
<intension id="ac_36"> 
	eq(Landscape_card, add(add( Document_Sheet1_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet1_Page2_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page2_Orientation1_Landscape1 ) )) 
</intension>
<intension id="ac_37">
	le(1, add(add( Document_Sheet1_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet1_Page2_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page2_Orientation1_Landscape1 ) ))
</intension>
<intension id="ac_38">
	ge(4, add(add( Document_Sheet1_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet1_Page2_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page1_Orientation1_Landscape1 ) ,add( Document_Sheet2_Page2_Orientation1_Landscape1 ) ))
</intension>
<intension id="ac_39">
	iff(Landscape, gt(Landscape_card,0))
</intension>
<intension id= "ac_40">
	imp(Document_Sheet1_Page1_Orientation1, 
	and(le(1, add( Document_Sheet1_Page1_Orientation1_Portrait1 )),
	ge(1, add( Document_Sheet1_Page1_Orientation1_Portrait1 ))))
</intension>
<intension id= "ac_41">
	imp(Document_Sheet1_Page2_Orientation1, 
	and(le(1, add( Document_Sheet1_Page2_Orientation1_Portrait1 )),
	ge(1, add( Document_Sheet1_Page2_Orientation1_Portrait1 ))))
</intension>
<intension id= "ac_42">
	imp(Document_Sheet2_Page1_Orientation1, 
	and(le(1, add( Document_Sheet2_Page1_Orientation1_Portrait1 )),
	ge(1, add( Document_Sheet2_Page1_Orientation1_Portrait1 ))))
</intension>
<intension id= "ac_43">
	imp(Document_Sheet2_Page2_Orientation1, 
	and(le(1, add( Document_Sheet2_Page2_Orientation1_Portrait1 )),
	ge(1, add( Document_Sheet2_Page2_Orientation1_Portrait1 ))))
</intension>
<intension id="ac_44"> 
	eq(Portrait_card, add(add( Document_Sheet1_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet1_Page2_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page2_Orientation1_Portrait1 ) )) 
</intension>
<intension id="ac_45">
	le(1, add(add( Document_Sheet1_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet1_Page2_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page2_Orientation1_Portrait1 ) ))
</intension>
<intension id="ac_46">
	ge(4, add(add( Document_Sheet1_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet1_Page2_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page1_Orientation1_Portrait1 ) ,add( Document_Sheet2_Page2_Orientation1_Portrait1 ) ))
</intension>
<intension id="ac_47">
	iff(Portrait, gt(Portrait_card,0))
</intension>
<intension id= "ac_48">
	imp(Document_Sheet1_Page1_Side1, 
	and(le(1, add( Document_Sheet1_Page1_Side1_Front1 )),
	ge(1, add( Document_Sheet1_Page1_Side1_Front1 ))))
</intension>
<intension id= "ac_49">
	imp(Document_Sheet1_Page2_Side1, 
	and(le(1, add( Document_Sheet1_Page2_Side1_Front1 )),
	ge(1, add( Document_Sheet1_Page2_Side1_Front1 ))))
</intension>
<intension id= "ac_50">
	imp(Document_Sheet2_Page1_Side1, 
	and(le(1, add( Document_Sheet2_Page1_Side1_Front1 )),
	ge(1, add( Document_Sheet2_Page1_Side1_Front1 ))))
</intension>
<intension id= "ac_51">
	imp(Document_Sheet2_Page2_Side1, 
	and(le(1, add( Document_Sheet2_Page2_Side1_Front1 )),
	ge(1, add( Document_Sheet2_Page2_Side1_Front1 ))))
</intension>
<intension id="ac_52"> 
	eq(Front_card, add(add( Document_Sheet1_Page1_Side1_Front1 ) ,add( Document_Sheet1_Page2_Side1_Front1 ) ,add( Document_Sheet2_Page1_Side1_Front1 ) ,add( Document_Sheet2_Page2_Side1_Front1 ) )) 
</intension>
<intension id="ac_53">
	le(1, add(add( Document_Sheet1_Page1_Side1_Front1 ) ,add( Document_Sheet1_Page2_Side1_Front1 ) ,add( Document_Sheet2_Page1_Side1_Front1 ) ,add( Document_Sheet2_Page2_Side1_Front1 ) ))
</intension>
<intension id="ac_54">
	ge(4, add(add( Document_Sheet1_Page1_Side1_Front1 ) ,add( Document_Sheet1_Page2_Side1_Front1 ) ,add( Document_Sheet2_Page1_Side1_Front1 ) ,add( Document_Sheet2_Page2_Side1_Front1 ) ))
</intension>
<intension id="ac_55">
	iff(Front, gt(Front_card,0))
</intension>
<intension id= "ac_56">
	imp(Document_Sheet1_Page1_Side1, 
	and(le(1, add( Document_Sheet1_Page1_Side1_Back1 )),
	ge(1, add( Document_Sheet1_Page1_Side1_Back1 ))))
</intension>
<intension id= "ac_57">
	imp(Document_Sheet1_Page2_Side1, 
	and(le(1, add( Document_Sheet1_Page2_Side1_Back1 )),
	ge(1, add( Document_Sheet1_Page2_Side1_Back1 ))))
</intension>
<intension id= "ac_58">
	imp(Document_Sheet2_Page1_Side1, 
	and(le(1, add( Document_Sheet2_Page1_Side1_Back1 )),
	ge(1, add( Document_Sheet2_Page1_Side1_Back1 ))))
</intension>
<intension id= "ac_59">
	imp(Document_Sheet2_Page2_Side1, 
	and(le(1, add( Document_Sheet2_Page2_Side1_Back1 )),
	ge(1, add( Document_Sheet2_Page2_Side1_Back1 ))))
</intension>
<intension id="ac_60"> 
	eq(Back_card, add(add( Document_Sheet1_Page1_Side1_Back1 ) ,add( Document_Sheet1_Page2_Side1_Back1 ) ,add( Document_Sheet2_Page1_Side1_Back1 ) ,add( Document_Sheet2_Page2_Side1_Back1 ) )) 
</intension>
<intension id="ac_61">
	le(1, add(add( Document_Sheet1_Page1_Side1_Back1 ) ,add( Document_Sheet1_Page2_Side1_Back1 ) ,add( Document_Sheet2_Page1_Side1_Back1 ) ,add( Document_Sheet2_Page2_Side1_Back1 ) ))
</intension>
<intension id="ac_62">
	ge(4, add(add( Document_Sheet1_Page1_Side1_Back1 ) ,add( Document_Sheet1_Page2_Side1_Back1 ) ,add( Document_Sheet2_Page1_Side1_Back1 ) ,add( Document_Sheet2_Page2_Side1_Back1 ) ))
</intension>
<intension id="ac_63">
	iff(Back, gt(Back_card,0))
</intension>
</constraints>
</instance>
