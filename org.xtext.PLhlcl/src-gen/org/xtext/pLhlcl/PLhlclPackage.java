/**
 * generated by Xtext 2.12.0
 */
package org.xtext.pLhlcl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.pLhlcl.PLhlclFactory
 * @model kind="package"
 * @generated
 */
public interface PLhlclPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pLhlcl";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/PLhlcl";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pLhlcl";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PLhlclPackage eINSTANCE = org.xtext.pLhlcl.impl.PLhlclPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ModelImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__VARS = 1;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CONSTRAINTS = 2;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.VarDeclarationImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Instantiable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__INSTANTIABLE = 0;

  /**
   * The feature id for the '<em><b>Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__MIN = 1;

  /**
   * The feature id for the '<em><b>Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__MAX = 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__TYPE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__NAME = 4;

  /**
   * The feature id for the '<em><b>Variants</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VARIANTS = 5;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.VariantDeclarationImpl <em>Variant Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.VariantDeclarationImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantDeclaration()
   * @generated
   */
  int VARIANT_DECLARATION = 2;

  /**
   * The number of structural features of the '<em>Variant Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_DECLARATION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.VariantsIntervalImpl <em>Variants Interval</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.VariantsIntervalImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantsInterval()
   * @generated
   */
  int VARIANTS_INTERVAL = 3;

  /**
   * The feature id for the '<em><b>Start</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL__START = VARIANT_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL__END = VARIANT_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Variants Interval</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL_FEATURE_COUNT = VARIANT_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.VariantsEnumerationImpl <em>Variants Enumeration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.VariantsEnumerationImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantsEnumeration()
   * @generated
   */
  int VARIANTS_ENUMERATION = 4;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_ENUMERATION__LIST = VARIANT_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variants Enumeration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_ENUMERATION_FEATURE_COUNT = VARIANT_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ConstraintImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__EXP = 1;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ExpressionImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 7;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ConsExpressionImpl <em>Cons Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ConsExpressionImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getConsExpression()
   * @generated
   */
  int CONS_EXPRESSION = 6;

  /**
   * The number of structural features of the '<em>Cons Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.IDConsImpl <em>ID Cons</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.IDConsImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getIDCons()
   * @generated
   */
  int ID_CONS = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_CONS__NAME = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>ID Cons</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_CONS_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.RefinementImpl <em>Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.RefinementImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getRefinement()
   * @generated
   */
  int REFINEMENT = 9;

  /**
   * The number of structural features of the '<em>Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REFINEMENT_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.AssignmentImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 10;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VAR = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VALUE = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.VarRefinementImpl <em>Var Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.VarRefinementImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVarRefinement()
   * @generated
   */
  int VAR_REFINEMENT = 11;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT__VAR = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT__VALUES = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Var Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.SetRefinementImpl <em>Set Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.SetRefinementImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getSetRefinement()
   * @generated
   */
  int SET_REFINEMENT = 12;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__VARS = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Head</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__HEAD = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Tail</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__TAIL = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Set Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.RuleImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getRule()
   * @generated
   */
  int RULE = 13;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__CONDITION = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Consequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__CONSEQUENCE = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.FodaUNImpl <em>Foda UN</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.FodaUNImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getFodaUN()
   * @generated
   */
  int FODA_UN = 14;

  /**
   * The feature id for the '<em><b>Var1</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_UN__VAR1 = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_UN__OP = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Foda UN</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_UN_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.FodaBinImpl <em>Foda Bin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.FodaBinImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getFodaBin()
   * @generated
   */
  int FODA_BIN = 15;

  /**
   * The feature id for the '<em><b>Var1</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_BIN__VAR1 = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_BIN__OP = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Var2</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_BIN__VAR2 = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Foda Bin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FODA_BIN_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.StructuralImpl <em>Structural</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.StructuralImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getStructural()
   * @generated
   */
  int STRUCTURAL = 16;

  /**
   * The feature id for the '<em><b>Parent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURAL__PARENT = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Group</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURAL__GROUP = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURAL__MIN = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURAL__MAX = CONS_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Structural</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURAL_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ListOfValuesImpl <em>List Of Values</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ListOfValuesImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getListOfValues()
   * @generated
   */
  int LIST_OF_VALUES = 17;

  /**
   * The feature id for the '<em><b>Values</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_VALUES__VALUES = 0;

  /**
   * The number of structural features of the '<em>List Of Values</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_VALUES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.pLhlcl.impl.ListOfIDsImpl <em>List Of IDs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pLhlcl.impl.ListOfIDsImpl
   * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getListOfIDs()
   * @generated
   */
  int LIST_OF_IDS = 18;

  /**
   * The feature id for the '<em><b>Ids</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_IDS__IDS = 0;

  /**
   * The number of structural features of the '<em>List Of IDs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_IDS_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.pLhlcl.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pLhlcl.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pLhlcl.Model#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.xtext.pLhlcl.Model#getVars()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Vars();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pLhlcl.Model#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see org.xtext.pLhlcl.Model#getConstraints()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Constraints();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarDeclaration#getInstantiable <em>Instantiable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Instantiable</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getInstantiable()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Instantiable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarDeclaration#getMin <em>Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getMin()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Min();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarDeclaration#getMax <em>Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getMax()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Max();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getType()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getName()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.VarDeclaration#getVariants <em>Variants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variants</em>'.
   * @see org.xtext.pLhlcl.VarDeclaration#getVariants()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Variants();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.VariantDeclaration <em>Variant Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variant Declaration</em>'.
   * @see org.xtext.pLhlcl.VariantDeclaration
   * @generated
   */
  EClass getVariantDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.VariantsInterval <em>Variants Interval</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variants Interval</em>'.
   * @see org.xtext.pLhlcl.VariantsInterval
   * @generated
   */
  EClass getVariantsInterval();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VariantsInterval#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Start</em>'.
   * @see org.xtext.pLhlcl.VariantsInterval#getStart()
   * @see #getVariantsInterval()
   * @generated
   */
  EAttribute getVariantsInterval_Start();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VariantsInterval#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.pLhlcl.VariantsInterval#getEnd()
   * @see #getVariantsInterval()
   * @generated
   */
  EAttribute getVariantsInterval_End();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.VariantsEnumeration <em>Variants Enumeration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variants Enumeration</em>'.
   * @see org.xtext.pLhlcl.VariantsEnumeration
   * @generated
   */
  EClass getVariantsEnumeration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.VariantsEnumeration#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>List</em>'.
   * @see org.xtext.pLhlcl.VariantsEnumeration#getList()
   * @see #getVariantsEnumeration()
   * @generated
   */
  EReference getVariantsEnumeration_List();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see org.xtext.pLhlcl.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Constraint#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pLhlcl.Constraint#getName()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.Constraint#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.pLhlcl.Constraint#getExp()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.ConsExpression <em>Cons Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cons Expression</em>'.
   * @see org.xtext.pLhlcl.ConsExpression
   * @generated
   */
  EClass getConsExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.pLhlcl.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.IDCons <em>ID Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ID Cons</em>'.
   * @see org.xtext.pLhlcl.IDCons
   * @generated
   */
  EClass getIDCons();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.IDCons#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pLhlcl.IDCons#getName()
   * @see #getIDCons()
   * @generated
   */
  EAttribute getIDCons_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Refinement <em>Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Refinement</em>'.
   * @see org.xtext.pLhlcl.Refinement
   * @generated
   */
  EClass getRefinement();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see org.xtext.pLhlcl.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Assignment#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.pLhlcl.Assignment#getVar()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Var();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Assignment#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.pLhlcl.Assignment#getValue()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.VarRefinement <em>Var Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Refinement</em>'.
   * @see org.xtext.pLhlcl.VarRefinement
   * @generated
   */
  EClass getVarRefinement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.VarRefinement#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.pLhlcl.VarRefinement#getVar()
   * @see #getVarRefinement()
   * @generated
   */
  EAttribute getVarRefinement_Var();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.VarRefinement#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Values</em>'.
   * @see org.xtext.pLhlcl.VarRefinement#getValues()
   * @see #getVarRefinement()
   * @generated
   */
  EReference getVarRefinement_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.SetRefinement <em>Set Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Refinement</em>'.
   * @see org.xtext.pLhlcl.SetRefinement
   * @generated
   */
  EClass getSetRefinement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.SetRefinement#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vars</em>'.
   * @see org.xtext.pLhlcl.SetRefinement#getVars()
   * @see #getSetRefinement()
   * @generated
   */
  EReference getSetRefinement_Vars();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.SetRefinement#getHead <em>Head</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Head</em>'.
   * @see org.xtext.pLhlcl.SetRefinement#getHead()
   * @see #getSetRefinement()
   * @generated
   */
  EReference getSetRefinement_Head();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pLhlcl.SetRefinement#getTail <em>Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tail</em>'.
   * @see org.xtext.pLhlcl.SetRefinement#getTail()
   * @see #getSetRefinement()
   * @generated
   */
  EReference getSetRefinement_Tail();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see org.xtext.pLhlcl.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.Rule#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.pLhlcl.Rule#getCondition()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.Rule#getConsequence <em>Consequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Consequence</em>'.
   * @see org.xtext.pLhlcl.Rule#getConsequence()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Consequence();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.FodaUN <em>Foda UN</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foda UN</em>'.
   * @see org.xtext.pLhlcl.FodaUN
   * @generated
   */
  EClass getFodaUN();

  /**
   * Returns the meta object for the reference '{@link org.xtext.pLhlcl.FodaUN#getVar1 <em>Var1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var1</em>'.
   * @see org.xtext.pLhlcl.FodaUN#getVar1()
   * @see #getFodaUN()
   * @generated
   */
  EReference getFodaUN_Var1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.FodaUN#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.pLhlcl.FodaUN#getOp()
   * @see #getFodaUN()
   * @generated
   */
  EAttribute getFodaUN_Op();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.FodaBin <em>Foda Bin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foda Bin</em>'.
   * @see org.xtext.pLhlcl.FodaBin
   * @generated
   */
  EClass getFodaBin();

  /**
   * Returns the meta object for the reference '{@link org.xtext.pLhlcl.FodaBin#getVar1 <em>Var1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var1</em>'.
   * @see org.xtext.pLhlcl.FodaBin#getVar1()
   * @see #getFodaBin()
   * @generated
   */
  EReference getFodaBin_Var1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.FodaBin#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.pLhlcl.FodaBin#getOp()
   * @see #getFodaBin()
   * @generated
   */
  EAttribute getFodaBin_Op();

  /**
   * Returns the meta object for the reference '{@link org.xtext.pLhlcl.FodaBin#getVar2 <em>Var2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var2</em>'.
   * @see org.xtext.pLhlcl.FodaBin#getVar2()
   * @see #getFodaBin()
   * @generated
   */
  EReference getFodaBin_Var2();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.Structural <em>Structural</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Structural</em>'.
   * @see org.xtext.pLhlcl.Structural
   * @generated
   */
  EClass getStructural();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Structural#getParent <em>Parent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Parent</em>'.
   * @see org.xtext.pLhlcl.Structural#getParent()
   * @see #getStructural()
   * @generated
   */
  EAttribute getStructural_Parent();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.pLhlcl.Structural#getGroup <em>Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Group</em>'.
   * @see org.xtext.pLhlcl.Structural#getGroup()
   * @see #getStructural()
   * @generated
   */
  EReference getStructural_Group();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Structural#getMin <em>Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min</em>'.
   * @see org.xtext.pLhlcl.Structural#getMin()
   * @see #getStructural()
   * @generated
   */
  EAttribute getStructural_Min();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pLhlcl.Structural#getMax <em>Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max</em>'.
   * @see org.xtext.pLhlcl.Structural#getMax()
   * @see #getStructural()
   * @generated
   */
  EAttribute getStructural_Max();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.ListOfValues <em>List Of Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Of Values</em>'.
   * @see org.xtext.pLhlcl.ListOfValues
   * @generated
   */
  EClass getListOfValues();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.pLhlcl.ListOfValues#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Values</em>'.
   * @see org.xtext.pLhlcl.ListOfValues#getValues()
   * @see #getListOfValues()
   * @generated
   */
  EAttribute getListOfValues_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.pLhlcl.ListOfIDs <em>List Of IDs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Of IDs</em>'.
   * @see org.xtext.pLhlcl.ListOfIDs
   * @generated
   */
  EClass getListOfIDs();

  /**
   * Returns the meta object for the reference list '{@link org.xtext.pLhlcl.ListOfIDs#getIds <em>Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Ids</em>'.
   * @see org.xtext.pLhlcl.ListOfIDs#getIds()
   * @see #getListOfIDs()
   * @generated
   */
  EReference getListOfIDs_Ids();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PLhlclFactory getPLhlclFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ModelImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__VARS = eINSTANCE.getModel_Vars();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CONSTRAINTS = eINSTANCE.getModel_Constraints();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.VarDeclarationImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Instantiable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__INSTANTIABLE = eINSTANCE.getVarDeclaration_Instantiable();

    /**
     * The meta object literal for the '<em><b>Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__MIN = eINSTANCE.getVarDeclaration_Min();

    /**
     * The meta object literal for the '<em><b>Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__MAX = eINSTANCE.getVarDeclaration_Max();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__TYPE = eINSTANCE.getVarDeclaration_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__NAME = eINSTANCE.getVarDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Variants</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VARIANTS = eINSTANCE.getVarDeclaration_Variants();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.VariantDeclarationImpl <em>Variant Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.VariantDeclarationImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantDeclaration()
     * @generated
     */
    EClass VARIANT_DECLARATION = eINSTANCE.getVariantDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.VariantsIntervalImpl <em>Variants Interval</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.VariantsIntervalImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantsInterval()
     * @generated
     */
    EClass VARIANTS_INTERVAL = eINSTANCE.getVariantsInterval();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANTS_INTERVAL__START = eINSTANCE.getVariantsInterval_Start();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANTS_INTERVAL__END = eINSTANCE.getVariantsInterval_End();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.VariantsEnumerationImpl <em>Variants Enumeration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.VariantsEnumerationImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVariantsEnumeration()
     * @generated
     */
    EClass VARIANTS_ENUMERATION = eINSTANCE.getVariantsEnumeration();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANTS_ENUMERATION__LIST = eINSTANCE.getVariantsEnumeration_List();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ConstraintImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__NAME = eINSTANCE.getConstraint_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__EXP = eINSTANCE.getConstraint_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ConsExpressionImpl <em>Cons Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ConsExpressionImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getConsExpression()
     * @generated
     */
    EClass CONS_EXPRESSION = eINSTANCE.getConsExpression();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ExpressionImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.IDConsImpl <em>ID Cons</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.IDConsImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getIDCons()
     * @generated
     */
    EClass ID_CONS = eINSTANCE.getIDCons();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ID_CONS__NAME = eINSTANCE.getIDCons_Name();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.RefinementImpl <em>Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.RefinementImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getRefinement()
     * @generated
     */
    EClass REFINEMENT = eINSTANCE.getRefinement();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.AssignmentImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__VAR = eINSTANCE.getAssignment_Var();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__VALUE = eINSTANCE.getAssignment_Value();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.VarRefinementImpl <em>Var Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.VarRefinementImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getVarRefinement()
     * @generated
     */
    EClass VAR_REFINEMENT = eINSTANCE.getVarRefinement();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_REFINEMENT__VAR = eINSTANCE.getVarRefinement_Var();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_REFINEMENT__VALUES = eINSTANCE.getVarRefinement_Values();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.SetRefinementImpl <em>Set Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.SetRefinementImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getSetRefinement()
     * @generated
     */
    EClass SET_REFINEMENT = eINSTANCE.getSetRefinement();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_REFINEMENT__VARS = eINSTANCE.getSetRefinement_Vars();

    /**
     * The meta object literal for the '<em><b>Head</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_REFINEMENT__HEAD = eINSTANCE.getSetRefinement_Head();

    /**
     * The meta object literal for the '<em><b>Tail</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_REFINEMENT__TAIL = eINSTANCE.getSetRefinement_Tail();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.RuleImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__CONDITION = eINSTANCE.getRule_Condition();

    /**
     * The meta object literal for the '<em><b>Consequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__CONSEQUENCE = eINSTANCE.getRule_Consequence();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.FodaUNImpl <em>Foda UN</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.FodaUNImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getFodaUN()
     * @generated
     */
    EClass FODA_UN = eINSTANCE.getFodaUN();

    /**
     * The meta object literal for the '<em><b>Var1</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FODA_UN__VAR1 = eINSTANCE.getFodaUN_Var1();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FODA_UN__OP = eINSTANCE.getFodaUN_Op();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.FodaBinImpl <em>Foda Bin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.FodaBinImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getFodaBin()
     * @generated
     */
    EClass FODA_BIN = eINSTANCE.getFodaBin();

    /**
     * The meta object literal for the '<em><b>Var1</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FODA_BIN__VAR1 = eINSTANCE.getFodaBin_Var1();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FODA_BIN__OP = eINSTANCE.getFodaBin_Op();

    /**
     * The meta object literal for the '<em><b>Var2</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FODA_BIN__VAR2 = eINSTANCE.getFodaBin_Var2();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.StructuralImpl <em>Structural</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.StructuralImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getStructural()
     * @generated
     */
    EClass STRUCTURAL = eINSTANCE.getStructural();

    /**
     * The meta object literal for the '<em><b>Parent</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRUCTURAL__PARENT = eINSTANCE.getStructural_Parent();

    /**
     * The meta object literal for the '<em><b>Group</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURAL__GROUP = eINSTANCE.getStructural_Group();

    /**
     * The meta object literal for the '<em><b>Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRUCTURAL__MIN = eINSTANCE.getStructural_Min();

    /**
     * The meta object literal for the '<em><b>Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRUCTURAL__MAX = eINSTANCE.getStructural_Max();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ListOfValuesImpl <em>List Of Values</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ListOfValuesImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getListOfValues()
     * @generated
     */
    EClass LIST_OF_VALUES = eINSTANCE.getListOfValues();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_OF_VALUES__VALUES = eINSTANCE.getListOfValues_Values();

    /**
     * The meta object literal for the '{@link org.xtext.pLhlcl.impl.ListOfIDsImpl <em>List Of IDs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pLhlcl.impl.ListOfIDsImpl
     * @see org.xtext.pLhlcl.impl.PLhlclPackageImpl#getListOfIDs()
     * @generated
     */
    EClass LIST_OF_IDS = eINSTANCE.getListOfIDs();

    /**
     * The meta object literal for the '<em><b>Ids</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_OF_IDS__IDS = eINSTANCE.getListOfIDs_Ids();

  }

} //PLhlclPackage
