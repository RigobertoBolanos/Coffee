/*
 * generated by Xtext 2.12.0
 */
package com.coffee.validation

//included using the tutorial
import org.eclipse.xtext.validation.Check
import com.coffee.pLEC.VarDeclaration
import com.coffee.pLEC.PLECPackage
import com.coffee.pLEC.RootRefinement

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class PLECValidator extends AbstractPLECValidator {
	static val packageInstance = PLECPackage.eINSTANCE
		/**
	 * Method for checking that non boolean domains are correctly declarated 
	 */
	 private String root="";
	@Check
	def checkTypeForNonBooleanDomain(VarDeclaration decl){
		if (decl.type=="boolean"){
			return
		}else{
			if (decl.variants === null){
				error("A variants declaration is required for variable '"+decl.name+"'",
					packageInstance.varDeclaration_Variants)
				return
			}
		}
	}
	
	//@Check
	def checkForOneRoot(RootRefinement exp){
		if (root===""){
			root= exp.getVar.name
			return
		}else{
			if (root != exp.getVar.name){
				error("The model cannot contain more than one root, the root already declared is '"+ root +"'",
					packageInstance.rootRefinement_Var)
				return
			}
		}
	}
	
	//TODO
	/*
	 * validar que el padre de una relaci√≥n estructural este declarado
	 * cada elemento puede hacer parte de solo una relacion estructural?
	 * 
	 */
	

	
}
