/*
 * generated by Xtext 2.12.0
 */
grammar InternalPLhlcl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.PLhlclGrammarAccess;

}
@parser::members {
	private PLhlclGrammarAccess grammarAccess;

	public void setGrammarAccess(PLhlclGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getGroup()); }
		(rule__VarDeclaration__Group__0)
		{ after(grammarAccess.getVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariantDeclaration
entryRuleVariantDeclaration
:
{ before(grammarAccess.getVariantDeclarationRule()); }
	 ruleVariantDeclaration
{ after(grammarAccess.getVariantDeclarationRule()); } 
	 EOF 
;

// Rule VariantDeclaration
ruleVariantDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantDeclarationAccess().getAlternatives()); }
		(rule__VariantDeclaration__Alternatives)
		{ after(grammarAccess.getVariantDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariantsInterval
entryRuleVariantsInterval
:
{ before(grammarAccess.getVariantsIntervalRule()); }
	 ruleVariantsInterval
{ after(grammarAccess.getVariantsIntervalRule()); } 
	 EOF 
;

// Rule VariantsInterval
ruleVariantsInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantsIntervalAccess().getGroup()); }
		(rule__VariantsInterval__Group__0)
		{ after(grammarAccess.getVariantsIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariantsEnumeration
entryRuleVariantsEnumeration
:
{ before(grammarAccess.getVariantsEnumerationRule()); }
	 ruleVariantsEnumeration
{ after(grammarAccess.getVariantsEnumerationRule()); } 
	 EOF 
;

// Rule VariantsEnumeration
ruleVariantsEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariantsEnumerationAccess().getGroup()); }
		(rule__VariantsEnumeration__Group__0)
		{ after(grammarAccess.getVariantsEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup()); }
		(rule__Constraint__Group__0)
		{ after(grammarAccess.getConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConsExpression
entryRuleConsExpression
:
{ before(grammarAccess.getConsExpressionRule()); }
	 ruleConsExpression
{ after(grammarAccess.getConsExpressionRule()); } 
	 EOF 
;

// Rule ConsExpression
ruleConsExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConsExpressionAccess().getAlternatives()); }
		(rule__ConsExpression__Alternatives)
		{ after(grammarAccess.getConsExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalExp
entryRuleTerminalExp
:
{ before(grammarAccess.getTerminalExpRule()); }
	 ruleTerminalExp
{ after(grammarAccess.getTerminalExpRule()); } 
	 EOF 
;

// Rule TerminalExp
ruleTerminalExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalExpAccess().getAlternatives()); }
		(rule__TerminalExp__Alternatives)
		{ after(grammarAccess.getTerminalExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDCons
entryRuleIDCons
:
{ before(grammarAccess.getIDConsRule()); }
	 ruleIDCons
{ after(grammarAccess.getIDConsRule()); } 
	 EOF 
;

// Rule IDCons
ruleIDCons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDConsAccess().getNameAssignment()); }
		(rule__IDCons__NameAssignment)
		{ after(grammarAccess.getIDConsAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructural
entryRuleStructural
:
{ before(grammarAccess.getStructuralRule()); }
	 ruleStructural
{ after(grammarAccess.getStructuralRule()); } 
	 EOF 
;

// Rule Structural
ruleStructural 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuralAccess().getGroup()); }
		(rule__Structural__Group__0)
		{ after(grammarAccess.getStructuralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributes
entryRuleAttributes
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributesAccess().getGroup()); }
		(rule__Attributes__Group__0)
		{ after(grammarAccess.getAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefinement
entryRuleRefinement
:
{ before(grammarAccess.getRefinementRule()); }
	 ruleRefinement
{ after(grammarAccess.getRefinementRule()); } 
	 EOF 
;

// Rule Refinement
ruleRefinement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefinementAccess().getAlternatives()); }
		(rule__Refinement__Alternatives)
		{ after(grammarAccess.getRefinementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarRefinement
entryRuleVarRefinement
:
{ before(grammarAccess.getVarRefinementRule()); }
	 ruleVarRefinement
{ after(grammarAccess.getVarRefinementRule()); } 
	 EOF 
;

// Rule VarRefinement
ruleVarRefinement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarRefinementAccess().getGroup()); }
		(rule__VarRefinement__Group__0)
		{ after(grammarAccess.getVarRefinementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetRefinement
entryRuleSetRefinement
:
{ before(grammarAccess.getSetRefinementRule()); }
	 ruleSetRefinement
{ after(grammarAccess.getSetRefinementRule()); } 
	 EOF 
;

// Rule SetRefinement
ruleSetRefinement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetRefinementAccess().getGroup()); }
		(rule__SetRefinement__Group__0)
		{ after(grammarAccess.getSetRefinementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFodaUN
entryRuleFodaUN
:
{ before(grammarAccess.getFodaUNRule()); }
	 ruleFodaUN
{ after(grammarAccess.getFodaUNRule()); } 
	 EOF 
;

// Rule FodaUN
ruleFodaUN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFodaUNAccess().getGroup()); }
		(rule__FodaUN__Group__0)
		{ after(grammarAccess.getFodaUNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFodaBin
entryRuleFodaBin
:
{ before(grammarAccess.getFodaBinRule()); }
	 ruleFodaBin
{ after(grammarAccess.getFodaBinRule()); } 
	 EOF 
;

// Rule FodaBin
ruleFodaBin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFodaBinAccess().getGroup()); }
		(rule__FodaBin__Group__0)
		{ after(grammarAccess.getFodaBinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolVal
entryRuleBoolVal
:
{ before(grammarAccess.getBoolValRule()); }
	 ruleBoolVal
{ after(grammarAccess.getBoolValRule()); } 
	 EOF 
;

// Rule BoolVal
ruleBoolVal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolValAccess().getValueAssignment()); }
		(rule__BoolVal__ValueAssignment)
		{ after(grammarAccess.getBoolValAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getValueAssignment()); }
		(rule__Number__ValueAssignment)
		{ after(grammarAccess.getNumberAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbol
entryRuleSymbol
:
{ before(grammarAccess.getSymbolRule()); }
	 ruleSymbol
{ after(grammarAccess.getSymbolRule()); } 
	 EOF 
;

// Rule Symbol
ruleSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAccess().getValueAssignment()); }
		(rule__Symbol__ValueAssignment)
		{ after(grammarAccess.getSymbolAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonEnumerableValue
entryRuleNonEnumerableValue
:
{ before(grammarAccess.getNonEnumerableValueRule()); }
	 ruleNonEnumerableValue
{ after(grammarAccess.getNonEnumerableValueRule()); } 
	 EOF 
;

// Rule NonEnumerableValue
ruleNonEnumerableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonEnumerableValueAccess().getAlternatives()); }
		(rule__NonEnumerableValue__Alternatives)
		{ after(grammarAccess.getNonEnumerableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarType
entryRuleVarType
:
{ before(grammarAccess.getVarTypeRule()); }
	 ruleVarType
{ after(grammarAccess.getVarTypeRule()); } 
	 EOF 
;

// Rule VarType
ruleVarType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarTypeAccess().getAlternatives()); }
		(rule__VarType__Alternatives)
		{ after(grammarAccess.getVarTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfValues
entryRuleListOfValues
:
{ before(grammarAccess.getListOfValuesRule()); }
	 ruleListOfValues
{ after(grammarAccess.getListOfValuesRule()); } 
	 EOF 
;

// Rule ListOfValues
ruleListOfValues 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfValuesAccess().getGroup()); }
		(rule__ListOfValues__Group__0)
		{ after(grammarAccess.getListOfValuesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfIDs
entryRuleListOfIDs
:
{ before(grammarAccess.getListOfIDsRule()); }
	 ruleListOfIDs
{ after(grammarAccess.getListOfIDsRule()); } 
	 EOF 
;

// Rule ListOfIDs
ruleListOfIDs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfIDsAccess().getGroup()); }
		(rule__ListOfIDs__Group__0)
		{ after(grammarAccess.getListOfIDsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinOp
entryRuleBinOp
:
{ before(grammarAccess.getBinOpRule()); }
	 ruleBinOp
{ after(grammarAccess.getBinOpRule()); } 
	 EOF 
;

// Rule BinOp
ruleBinOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinOpAccess().getAlternatives()); }
		(rule__BinOp__Alternatives)
		{ after(grammarAccess.getBinOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOp
entryRuleUnaryOp
:
{ before(grammarAccess.getUnaryOpRule()); }
	 ruleUnaryOp
{ after(grammarAccess.getUnaryOpRule()); } 
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOpAccess().getAlternatives()); }
		(rule__UnaryOp__Alternatives)
		{ after(grammarAccess.getUnaryOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantDeclarationAccess().getVariantsIntervalParserRuleCall_0()); }
		ruleVariantsInterval
		{ after(grammarAccess.getVariantDeclarationAccess().getVariantsIntervalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariantDeclarationAccess().getVariantsEnumerationParserRuleCall_1()); }
		ruleVariantsEnumeration
		{ after(grammarAccess.getVariantDeclarationAccess().getVariantsEnumerationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConsExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConsExpressionAccess().getIDConsParserRuleCall_0()); }
		ruleIDCons
		{ after(grammarAccess.getConsExpressionAccess().getIDConsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getRefinementParserRuleCall_1()); }
		ruleRefinement
		{ after(grammarAccess.getConsExpressionAccess().getRefinementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getRuleParserRuleCall_2()); }
		ruleRule
		{ after(grammarAccess.getConsExpressionAccess().getRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getFodaBinParserRuleCall_3()); }
		ruleFodaBin
		{ after(grammarAccess.getConsExpressionAccess().getFodaBinParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getStructuralParserRuleCall_4()); }
		ruleStructural
		{ after(grammarAccess.getConsExpressionAccess().getStructuralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getFodaUNParserRuleCall_5()); }
		ruleFodaUN
		{ after(grammarAccess.getConsExpressionAccess().getFodaUNParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getConsExpressionAccess().getAttributesParserRuleCall_6()); }
		ruleAttributes
		{ after(grammarAccess.getConsExpressionAccess().getAttributesParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalExpAccess().getGroup_0()); }
		(rule__TerminalExp__Group_0__0)
		{ after(grammarAccess.getTerminalExpAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalExpAccess().getIDConsParserRuleCall_1()); }
		ruleIDCons
		{ after(grammarAccess.getTerminalExpAccess().getIDConsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Refinement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefinementAccess().getAssignmentParserRuleCall_0()); }
		ruleAssignment
		{ after(grammarAccess.getRefinementAccess().getAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRefinementAccess().getVarRefinementParserRuleCall_1()); }
		ruleVarRefinement
		{ after(grammarAccess.getRefinementAccess().getVarRefinementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRefinementAccess().getSetRefinementParserRuleCall_2()); }
		ruleSetRefinement
		{ after(grammarAccess.getRefinementAccess().getSetRefinementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolVal__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolValAccess().getValueTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBoolValAccess().getValueTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolValAccess().getValueFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBoolValAccess().getValueFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getValueAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNonEnumerableValueParserRuleCall_1()); }
		ruleNonEnumerableValue
		{ after(grammarAccess.getValueAccess().getNonEnumerableValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonEnumerableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonEnumerableValueAccess().getBoolValParserRuleCall_0()); }
		ruleBoolVal
		{ after(grammarAccess.getNonEnumerableValueAccess().getBoolValParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonEnumerableValueAccess().getSymbolParserRuleCall_1()); }
		ruleSymbol
		{ after(grammarAccess.getNonEnumerableValueAccess().getSymbolParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTypeAccess().getBooleanKeyword_0()); }
		'boolean'
		{ after(grammarAccess.getVarTypeAccess().getBooleanKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getIntegerKeyword_1()); }
		'integer'
		{ after(grammarAccess.getVarTypeAccess().getIntegerKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getSymbolicKeyword_2()); }
		'symbolic'
		{ after(grammarAccess.getVarTypeAccess().getSymbolicKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinOpAccess().getRequiresKeyword_0()); }
		'requires'
		{ after(grammarAccess.getBinOpAccess().getRequiresKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinOpAccess().getExcludesKeyword_1()); }
		'excludes'
		{ after(grammarAccess.getBinOpAccess().getExcludesKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinOpAccess().getOptionalKeyword_2()); }
		'optional'
		{ after(grammarAccess.getBinOpAccess().getOptionalKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinOpAccess().getMandatoryKeyword_3()); }
		'mandatory'
		{ after(grammarAccess.getBinOpAccess().getMandatoryKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOpAccess().getOptionalKeyword_0()); }
		'optional'
		{ after(grammarAccess.getUnaryOpAccess().getOptionalKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOpAccess().getMandatoryKeyword_1()); }
		'mandatory'
		{ after(grammarAccess.getUnaryOpAccess().getMandatoryKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getVariablesKeyword_2()); }
	'variables:'
	{ after(grammarAccess.getModelAccess().getVariablesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getVarsAssignment_3()); }
	(rule__Model__VarsAssignment_3)*
	{ after(grammarAccess.getModelAccess().getVarsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConstraintsKeyword_4()); }
	'constraints:'
	{ after(grammarAccess.getModelAccess().getConstraintsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConstraintsAssignment_5()); }
	(rule__Model__ConstraintsAssignment_5)*
	{ after(grammarAccess.getModelAccess().getConstraintsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__0__Impl
	rule__VarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getGroup_0()); }
	(rule__VarDeclaration__Group_0__0)?
	{ after(grammarAccess.getVarDeclarationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__1__Impl
	rule__VarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_1()); }
	(rule__VarDeclaration__TypeAssignment_1)
	{ after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__2__Impl
	rule__VarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getNameAssignment_2()); }
	(rule__VarDeclaration__NameAssignment_2)
	{ after(grammarAccess.getVarDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
	(rule__VarDeclaration__Group_3__0)?
	{ after(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__0__Impl
	rule__VarDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getInstantiableAssignment_0_0()); }
	(rule__VarDeclaration__InstantiableAssignment_0_0)
	{ after(grammarAccess.getVarDeclarationAccess().getInstantiableAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__1__Impl
	rule__VarDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__2__Impl
	rule__VarDeclaration__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getMinAssignment_0_2()); }
	(rule__VarDeclaration__MinAssignment_0_2)
	{ after(grammarAccess.getVarDeclarationAccess().getMinAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__3__Impl
	rule__VarDeclaration__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__4__Impl
	rule__VarDeclaration__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getMaxAssignment_0_4()); }
	(rule__VarDeclaration__MaxAssignment_0_4)
	{ after(grammarAccess.getVarDeclarationAccess().getMaxAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_0_5()); }
	']'
	{ after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_3__0__Impl
	rule__VarDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getValuesKeyword_3_0()); }
	'values:'
	{ after(grammarAccess.getVarDeclarationAccess().getValuesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getVariantsAssignment_3_1()); }
	(rule__VarDeclaration__VariantsAssignment_3_1)
	{ after(grammarAccess.getVarDeclarationAccess().getVariantsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariantsInterval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsInterval__Group__0__Impl
	rule__VariantsInterval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsIntervalAccess().getStartAssignment_0()); }
	(rule__VariantsInterval__StartAssignment_0)
	{ after(grammarAccess.getVariantsIntervalAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsInterval__Group__1__Impl
	rule__VariantsInterval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsIntervalAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getVariantsIntervalAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsInterval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsIntervalAccess().getEndAssignment_2()); }
	(rule__VariantsInterval__EndAssignment_2)
	{ after(grammarAccess.getVariantsIntervalAccess().getEndAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariantsEnumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsEnumeration__Group__0__Impl
	rule__VariantsEnumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsEnumerationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getVariantsEnumerationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsEnumeration__Group__1__Impl
	rule__VariantsEnumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsEnumerationAccess().getListAssignment_1()); }
	(rule__VariantsEnumeration__ListAssignment_1)
	{ after(grammarAccess.getVariantsEnumerationAccess().getListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariantsEnumeration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariantsEnumerationAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getVariantsEnumerationAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getNameAssignment_0()); }
	(rule__Constraint__NameAssignment_0)
	{ after(grammarAccess.getConstraintAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getExpAssignment_2()); }
	(rule__Constraint__ExpAssignment_2)
	{ after(grammarAccess.getConstraintAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExp__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExp__Group_0__0__Impl
	rule__TerminalExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getTerminalExpAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExp__Group_0__1__Impl
	rule__TerminalExp__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpAccess().getConsExpressionParserRuleCall_0_1()); }
	ruleConsExpression
	{ after(grammarAccess.getTerminalExpAccess().getConsExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TerminalExp__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExp__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTerminalExpAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getTerminalExpAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Structural__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__0__Impl
	rule__Structural__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getStructuralKeyword_0()); }
	'structural:'
	{ after(grammarAccess.getStructuralAccess().getStructuralKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__1__Impl
	rule__Structural__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getParentAssignment_1()); }
	(rule__Structural__ParentAssignment_1)
	{ after(grammarAccess.getStructuralAccess().getParentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__2__Impl
	rule__Structural__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getVariantsKeyword_2()); }
	'variants:'
	{ after(grammarAccess.getStructuralAccess().getVariantsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__3__Impl
	rule__Structural__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getStructuralAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__4__Impl
	rule__Structural__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getGroupAssignment_4()); }
	(rule__Structural__GroupAssignment_4)
	{ after(grammarAccess.getStructuralAccess().getGroupAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__5__Impl
	rule__Structural__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getStructuralAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getGroup_6()); }
	(rule__Structural__Group_6__0)?
	{ after(grammarAccess.getStructuralAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Structural__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__0__Impl
	rule__Structural__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getCardKeyword_6_0()); }
	'card:'
	{ after(grammarAccess.getStructuralAccess().getCardKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__1__Impl
	rule__Structural__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getLeftSquareBracketKeyword_6_1()); }
	'['
	{ after(grammarAccess.getStructuralAccess().getLeftSquareBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__2__Impl
	rule__Structural__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getMinAssignment_6_2()); }
	(rule__Structural__MinAssignment_6_2)
	{ after(grammarAccess.getStructuralAccess().getMinAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__3__Impl
	rule__Structural__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getCommaKeyword_6_3()); }
	','
	{ after(grammarAccess.getStructuralAccess().getCommaKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__4__Impl
	rule__Structural__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getMaxAssignment_6_4()); }
	(rule__Structural__MaxAssignment_6_4)
	{ after(grammarAccess.getStructuralAccess().getMaxAssignment_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structural__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__Group_6__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuralAccess().getRightSquareBracketKeyword_6_5()); }
	']'
	{ after(grammarAccess.getStructuralAccess().getRightSquareBracketKeyword_6_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__0__Impl
	rule__Attributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributesKeyword_0()); }
	'attributes:'
	{ after(grammarAccess.getAttributesAccess().getAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__1__Impl
	rule__Attributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAttributesAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__2__Impl
	rule__Attributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttAssignment_2()); }
	(rule__Attributes__AttAssignment_2)
	{ after(grammarAccess.getAttributesAccess().getAttAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__3__Impl
	rule__Attributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getAttributesAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__4__Impl
	rule__Attributes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getOfKeyword_4()); }
	'of'
	{ after(grammarAccess.getAttributesAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getVar1Assignment_5()); }
	(rule__Attributes__Var1Assignment_5)
	{ after(grammarAccess.getAttributesAccess().getVar1Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
	(rule__Assignment__VarAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getAssignmentAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarRefinement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarRefinement__Group__0__Impl
	rule__VarRefinement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarRefinementAccess().getVarAssignment_0()); }
	(rule__VarRefinement__VarAssignment_0)
	{ after(grammarAccess.getVarRefinementAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarRefinement__Group__1__Impl
	rule__VarRefinement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarRefinementAccess().getInKeyword_1()); }
	'in'
	{ after(grammarAccess.getVarRefinementAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarRefinement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarRefinementAccess().getValuesAssignment_2()); }
	(rule__VarRefinement__ValuesAssignment_2)
	{ after(grammarAccess.getVarRefinementAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetRefinement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__0__Impl
	rule__SetRefinement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getVarsKeyword_0()); }
	'vars:'
	{ after(grammarAccess.getSetRefinementAccess().getVarsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__1__Impl
	rule__SetRefinement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__2__Impl
	rule__SetRefinement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getVarsAssignment_2()); }
	(rule__SetRefinement__VarsAssignment_2)
	{ after(grammarAccess.getSetRefinementAccess().getVarsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__3__Impl
	rule__SetRefinement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__4__Impl
	rule__SetRefinement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getVariantsKeyword_4()); }
	'variants'
	{ after(grammarAccess.getSetRefinementAccess().getVariantsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__5__Impl
	rule__SetRefinement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getLeftSquareBracketKeyword_5()); }
	'['
	{ after(grammarAccess.getSetRefinementAccess().getLeftSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__6__Impl
	rule__SetRefinement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__7__Impl
	rule__SetRefinement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getHeadAssignment_7()); }
	(rule__SetRefinement__HeadAssignment_7)
	{ after(grammarAccess.getSetRefinementAccess().getHeadAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__8__Impl
	rule__SetRefinement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__9__Impl
	rule__SetRefinement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSetRefinementAccess().getGroup_9()); }
		(rule__SetRefinement__Group_9__0)
		{ after(grammarAccess.getSetRefinementAccess().getGroup_9()); }
	)
	(
		{ before(grammarAccess.getSetRefinementAccess().getGroup_9()); }
		(rule__SetRefinement__Group_9__0)*
		{ after(grammarAccess.getSetRefinementAccess().getGroup_9()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getRightSquareBracketKeyword_10()); }
	']'
	{ after(grammarAccess.getSetRefinementAccess().getRightSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetRefinement__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group_9__0__Impl
	rule__SetRefinement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getSetRefinementAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group_9__1__Impl
	rule__SetRefinement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_9_1()); }
	'('
	{ after(grammarAccess.getSetRefinementAccess().getLeftParenthesisKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group_9__2__Impl
	rule__SetRefinement__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getTailAssignment_9_2()); }
	(rule__SetRefinement__TailAssignment_9_2)
	{ after(grammarAccess.getSetRefinementAccess().getTailAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetRefinement__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_9_3()); }
	')'
	{ after(grammarAccess.getSetRefinementAccess().getRightParenthesisKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionAssignment_0()); }
	(rule__Rule__ConditionAssignment_0)
	{ after(grammarAccess.getRuleAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1()); }
	'-->'
	{ after(grammarAccess.getRuleAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConsequenceAssignment_2()); }
	(rule__Rule__ConsequenceAssignment_2)
	{ after(grammarAccess.getRuleAccess().getConsequenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FodaUN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaUN__Group__0__Impl
	rule__FodaUN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaUNAccess().getVar1Assignment_0()); }
	(rule__FodaUN__Var1Assignment_0)
	{ after(grammarAccess.getFodaUNAccess().getVar1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaUN__Group__1__Impl
	rule__FodaUN__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaUNAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getFodaUNAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaUN__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaUNAccess().getOpAssignment_2()); }
	(rule__FodaUN__OpAssignment_2)
	{ after(grammarAccess.getFodaUNAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FodaBin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaBin__Group__0__Impl
	rule__FodaBin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaBinAccess().getVar1Assignment_0()); }
	(rule__FodaBin__Var1Assignment_0)
	{ after(grammarAccess.getFodaBinAccess().getVar1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaBin__Group__1__Impl
	rule__FodaBin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaBinAccess().getOpAssignment_1()); }
	(rule__FodaBin__OpAssignment_1)
	{ after(grammarAccess.getFodaBinAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FodaBin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFodaBinAccess().getVar2Assignment_2()); }
	(rule__FodaBin__Var2Assignment_2)
	{ after(grammarAccess.getFodaBinAccess().getVar2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group__0__Impl
	rule__ListOfValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
	(rule__ListOfValues__ValuesAssignment_0)
	{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getGroup_1()); }
	(rule__ListOfValues__Group_1__0)*
	{ after(grammarAccess.getListOfValuesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfValues__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group_1__0__Impl
	rule__ListOfValues__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
		(',')
		{ after(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
	)
	(
		{ before(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
		(',')*
		{ after(grammarAccess.getListOfValuesAccess().getCommaKeyword_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfValues__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
	(rule__ListOfValues__ValuesAssignment_1_1)
	{ after(grammarAccess.getListOfValuesAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfIDs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group__0__Impl
	rule__ListOfIDs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getIdsAssignment_0()); }
	(rule__ListOfIDs__IdsAssignment_0)
	{ after(grammarAccess.getListOfIDsAccess().getIdsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getGroup_1()); }
	(rule__ListOfIDs__Group_1__0)*
	{ after(grammarAccess.getListOfIDsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfIDs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group_1__0__Impl
	rule__ListOfIDs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListOfIDsAccess().getCommaKeyword_1_0()); }
		(',')
		{ after(grammarAccess.getListOfIDsAccess().getCommaKeyword_1_0()); }
	)
	(
		{ before(grammarAccess.getListOfIDsAccess().getCommaKeyword_1_0()); }
		(',')*
		{ after(grammarAccess.getListOfIDsAccess().getCommaKeyword_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfIDs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfIDsAccess().getIdsAssignment_1_1()); }
	(rule__ListOfIDs__IdsAssignment_1_1)
	{ after(grammarAccess.getListOfIDsAccess().getIdsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__VarsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getVarsVarDeclarationParserRuleCall_3_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getModelAccess().getVarsVarDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConstraintsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConstraintsConstraintParserRuleCall_5_0()); }
		ruleConstraint
		{ after(grammarAccess.getModelAccess().getConstraintsConstraintParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__InstantiableAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getInstantiableInstantiableKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getVarDeclarationAccess().getInstantiableInstantiableKeyword_0_0_0()); }
			'instantiable'
			{ after(grammarAccess.getVarDeclarationAccess().getInstantiableInstantiableKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getVarDeclarationAccess().getInstantiableInstantiableKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__MinAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getMinNumberParserRuleCall_0_2_0()); }
		ruleNumber
		{ after(grammarAccess.getVarDeclarationAccess().getMinNumberParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__MaxAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getMaxNumberParserRuleCall_0_4_0()); }
		ruleNumber
		{ after(grammarAccess.getVarDeclarationAccess().getMaxNumberParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getTypeVarTypeParserRuleCall_1_0()); }
		ruleVarType
		{ after(grammarAccess.getVarDeclarationAccess().getTypeVarTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__VariantsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getVariantsVariantDeclarationParserRuleCall_3_1_0()); }
		ruleVariantDeclaration
		{ after(grammarAccess.getVarDeclarationAccess().getVariantsVariantDeclarationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantsIntervalAccess().getStartNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getVariantsIntervalAccess().getStartNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsInterval__EndAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantsIntervalAccess().getEndNumberParserRuleCall_2_0()); }
		ruleNumber
		{ after(grammarAccess.getVariantsIntervalAccess().getEndNumberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantsEnumeration__ListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariantsEnumerationAccess().getListListOfValuesParserRuleCall_1_0()); }
		ruleListOfValues
		{ after(grammarAccess.getVariantsEnumerationAccess().getListListOfValuesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getExpConsExpressionParserRuleCall_2_0()); }
		ruleConsExpression
		{ after(grammarAccess.getConstraintAccess().getExpConsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDCons__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDConsAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIDConsAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__ParentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuralAccess().getParentIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructuralAccess().getParentIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__GroupAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuralAccess().getGroupListOfIDsParserRuleCall_4_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getStructuralAccess().getGroupListOfIDsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__MinAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuralAccess().getMinNumberParserRuleCall_6_2_0()); }
		ruleNumber
		{ after(grammarAccess.getStructuralAccess().getMinNumberParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structural__MaxAssignment_6_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuralAccess().getMaxNumberParserRuleCall_6_4_0()); }
		ruleNumber
		{ after(grammarAccess.getStructuralAccess().getMaxNumberParserRuleCall_6_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttListOfIDsParserRuleCall_2_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getAttributesAccess().getAttListOfIDsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Var1Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getVar1VarDeclarationCrossReference_5_0()); }
		(
			{ before(grammarAccess.getAttributesAccess().getVar1VarDeclarationIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributesAccess().getVar1VarDeclarationIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getAttributesAccess().getVar1VarDeclarationCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getVarIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarRefinementAccess().getVarIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVarRefinementAccess().getVarIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefinement__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarRefinementAccess().getValuesVariantDeclarationParserRuleCall_2_0()); }
		ruleVariantDeclaration
		{ after(grammarAccess.getVarRefinementAccess().getValuesVariantDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__VarsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetRefinementAccess().getVarsListOfIDsParserRuleCall_2_0()); }
		ruleListOfIDs
		{ after(grammarAccess.getSetRefinementAccess().getVarsListOfIDsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__HeadAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetRefinementAccess().getHeadListOfValuesParserRuleCall_7_0()); }
		ruleListOfValues
		{ after(grammarAccess.getSetRefinementAccess().getHeadListOfValuesParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetRefinement__TailAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetRefinementAccess().getTailListOfValuesParserRuleCall_9_2_0()); }
		ruleListOfValues
		{ after(grammarAccess.getSetRefinementAccess().getTailListOfValuesParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionTerminalExpParserRuleCall_0_0()); }
		ruleTerminalExp
		{ after(grammarAccess.getRuleAccess().getConditionTerminalExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConsequenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConsequenceTerminalExpParserRuleCall_2_0()); }
		ruleTerminalExp
		{ after(grammarAccess.getRuleAccess().getConsequenceTerminalExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__Var1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFodaUNAccess().getVar1VarDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFodaUNAccess().getVar1VarDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFodaUNAccess().getVar1VarDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFodaUNAccess().getVar1VarDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaUN__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFodaUNAccess().getOpUnaryOpParserRuleCall_2_0()); }
		ruleUnaryOp
		{ after(grammarAccess.getFodaUNAccess().getOpUnaryOpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Var1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFodaBinAccess().getVar1VarDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFodaBinAccess().getVar1VarDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFodaBinAccess().getVar1VarDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFodaBinAccess().getVar1VarDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFodaBinAccess().getOpBinOpParserRuleCall_1_0()); }
		ruleBinOp
		{ after(grammarAccess.getFodaBinAccess().getOpBinOpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FodaBin__Var2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFodaBinAccess().getVar2VarDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFodaBinAccess().getVar2VarDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFodaBinAccess().getVar2VarDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFodaBinAccess().getVar2VarDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolVal__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolValAccess().getValueAlternatives_0()); }
		(rule__BoolVal__ValueAlternatives_0)
		{ after(grammarAccess.getBoolValAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getValueIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolAccess().getValueIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuesAccess().getValuesValueParserRuleCall_0_0()); }
		ruleValue
		{ after(grammarAccess.getListOfValuesAccess().getValuesValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfValues__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfValuesAccess().getValuesValueParserRuleCall_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getListOfValuesAccess().getValuesValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__IdsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfIDs__IdsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getListOfIDsAccess().getIdsVarDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
