/*
 * generated by Xtext 2.12.0
 */
package com.coffee.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import com.coffee.hlvl.Model
import com.coffee.hlvl.HlvlPackage


/**
 * Class to test the correct parsing of HLVL
 * @author Angela Villota
 * @version HLVL V4
 * November 2018
 */
@RunWith(XtextRunner)
@InjectWith(HlvlInjectorProvider)
class HlvlParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	@Inject extension ParseHelper // gracias a esta linea se puede hacer el llamado .parse
	
/*********************************************************************************************************
 * Methods to test the parser
 * 
 */
 /**
 * Method to test the interpretation of an empty program
 */
	@Test
	def void emptyModel() {
		// model is a program in PLEC
		val model = 
		'''
		model empty
		elements:
		relations:
		'''
		//empty is an empty model
		val empty = parseHelper.parse(model)
		Assert.assertNotNull(empty)
		Assert.assertTrue(empty.eResource.errors.isEmpty)
	}
}
