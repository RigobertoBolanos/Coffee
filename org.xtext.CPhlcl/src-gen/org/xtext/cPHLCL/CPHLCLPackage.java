/**
 * generated by Xtext 2.12.0
 */
package org.xtext.cPHLCL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.cPHLCL.CPHLCLFactory
 * @model kind="package"
 * @generated
 */
public interface CPHLCLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cPHLCL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/CPHLCL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cPHLCL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CPHLCLPackage eINSTANCE = org.xtext.cPHLCL.impl.CPHLCLPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ModelImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__VARS = 1;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CONSTRAINTS = 2;

  /**
   * The feature id for the '<em><b>Strategy</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__STRATEGY = 3;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.VarDeclarationImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__TYPE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__NAME = 1;

  /**
   * The feature id for the '<em><b>Domain</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__DOMAIN = 2;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.DomainDeclarationImpl <em>Domain Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.DomainDeclarationImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getDomainDeclaration()
   * @generated
   */
  int DOMAIN_DECLARATION = 2;

  /**
   * The number of structural features of the '<em>Domain Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOMAIN_DECLARATION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.IntervalImpl <em>Interval</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.IntervalImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getInterval()
   * @generated
   */
  int INTERVAL = 3;

  /**
   * The feature id for the '<em><b>Start</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTERVAL__START = DOMAIN_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTERVAL__END = DOMAIN_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Interval</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTERVAL_FEATURE_COUNT = DOMAIN_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.EnumerationImpl <em>Enumeration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.EnumerationImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getEnumeration()
   * @generated
   */
  int ENUMERATION = 4;

  /**
   * The feature id for the '<em><b>List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION__LIST = DOMAIN_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Enumeration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATION_FEATURE_COUNT = DOMAIN_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ConstraintImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__EXP = 1;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ExpressionImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 6;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.BoolExpressionImpl <em>Bool Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.BoolExpressionImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBoolExpression()
   * @generated
   */
  int BOOL_EXPRESSION = 7;

  /**
   * The number of structural features of the '<em>Bool Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ComplexTermImpl <em>Complex Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ComplexTermImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getComplexTerm()
   * @generated
   */
  int COMPLEX_TERM = 8;

  /**
   * The number of structural features of the '<em>Complex Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPLEX_TERM_FEATURE_COUNT = BOOL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.LogicImpl <em>Logic</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.LogicImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getLogic()
   * @generated
   */
  int LOGIC = 9;

  /**
   * The feature id for the '<em><b>Logic Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC__LOGIC_LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Logic Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC__LOGIC_OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Logic Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC__LOGIC_RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Logic</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.LogicUnImpl <em>Logic Un</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.LogicUnImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getLogicUn()
   * @generated
   */
  int LOGIC_UN = 10;

  /**
   * The feature id for the '<em><b>Logic Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC_UN__LOGIC_OP = COMPLEX_TERM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC_UN__EXP = COMPLEX_TERM_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Logic Un</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOGIC_UN_FEATURE_COUNT = COMPLEX_TERM_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.RelationalImpl <em>Relational</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.RelationalImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getRelational()
   * @generated
   */
  int RELATIONAL = 11;

  /**
   * The feature id for the '<em><b>Relational Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL__RELATIONAL_LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Relational Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL__RELATIONAL_OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Relational Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL__RELATIONAL_RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Relational</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.NumExpressionImpl <em>Num Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.NumExpressionImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getNumExpression()
   * @generated
   */
  int NUM_EXPRESSION = 12;

  /**
   * The number of structural features of the '<em>Num Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ArithmeticImpl <em>Arithmetic</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ArithmeticImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getArithmetic()
   * @generated
   */
  int ARITHMETIC = 13;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC__LEFT = NUM_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Arith Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC__ARITH_OPERATOR = NUM_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC__RIGHT = NUM_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Arithmetic</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_FEATURE_COUNT = NUM_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.GlobalImpl <em>Global</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.GlobalImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getGlobal()
   * @generated
   */
  int GLOBAL = 14;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL__OP = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL__VARS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Global</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ControlImpl <em>Control</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ControlImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getControl()
   * @generated
   */
  int CONTROL = 15;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTROL__COND = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>True Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTROL__TRUE_STATEMENT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTROL__ELSE_STATEMENT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Control</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTROL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.BoolImpl <em>Bool</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.BoolImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBool()
   * @generated
   */
  int BOOL = 16;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__VAL = 0;

  /**
   * The number of structural features of the '<em>Bool</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.BoolVarImpl <em>Bool Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.BoolVarImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBoolVar()
   * @generated
   */
  int BOOL_VAR = 17;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_VAR__ID = BOOL_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bool Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_VAR_FEATURE_COUNT = BOOL_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.NumberImpl <em>Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.NumberImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getNumber()
   * @generated
   */
  int NUMBER = 18;

  /**
   * The feature id for the '<em><b>Num</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__NUM = NUM_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_FEATURE_COUNT = NUM_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.IntVarImpl <em>Int Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.IntVarImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getIntVar()
   * @generated
   */
  int INT_VAR = 19;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_VAR__ID = NUM_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_VAR_FEATURE_COUNT = NUM_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ListOfValuesImpl <em>List Of Values</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ListOfValuesImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfValues()
   * @generated
   */
  int LIST_OF_VALUES = 20;

  /**
   * The feature id for the '<em><b>Values</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_VALUES__VALUES = 0;

  /**
   * The number of structural features of the '<em>List Of Values</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_VALUES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ListOfEnumerablesImpl <em>List Of Enumerables</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ListOfEnumerablesImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfEnumerables()
   * @generated
   */
  int LIST_OF_ENUMERABLES = 21;

  /**
   * The feature id for the '<em><b>Values</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_ENUMERABLES__VALUES = 0;

  /**
   * The number of structural features of the '<em>List Of Enumerables</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_ENUMERABLES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.cPHLCL.impl.ListOfIDsImpl <em>List Of IDs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.cPHLCL.impl.ListOfIDsImpl
   * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfIDs()
   * @generated
   */
  int LIST_OF_IDS = 22;

  /**
   * The feature id for the '<em><b>Ids</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_IDS__IDS = 0;

  /**
   * The number of structural features of the '<em>List Of IDs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_OF_IDS_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.cPHLCL.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.cPHLCL.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.cPHLCL.Model#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.xtext.cPHLCL.Model#getVars()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Vars();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.cPHLCL.Model#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see org.xtext.cPHLCL.Model#getConstraints()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Constraints();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Model#getStrategy <em>Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Strategy</em>'.
   * @see org.xtext.cPHLCL.Model#getStrategy()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Strategy();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.xtext.cPHLCL.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.VarDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.cPHLCL.VarDeclaration#getType()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.VarDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.cPHLCL.VarDeclaration#getName()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.VarDeclaration#getDomain <em>Domain</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Domain</em>'.
   * @see org.xtext.cPHLCL.VarDeclaration#getDomain()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Domain();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.DomainDeclaration <em>Domain Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Domain Declaration</em>'.
   * @see org.xtext.cPHLCL.DomainDeclaration
   * @generated
   */
  EClass getDomainDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Interval <em>Interval</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Interval</em>'.
   * @see org.xtext.cPHLCL.Interval
   * @generated
   */
  EClass getInterval();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Interval#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Start</em>'.
   * @see org.xtext.cPHLCL.Interval#getStart()
   * @see #getInterval()
   * @generated
   */
  EAttribute getInterval_Start();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Interval#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.cPHLCL.Interval#getEnd()
   * @see #getInterval()
   * @generated
   */
  EAttribute getInterval_End();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Enumeration <em>Enumeration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enumeration</em>'.
   * @see org.xtext.cPHLCL.Enumeration
   * @generated
   */
  EClass getEnumeration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Enumeration#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>List</em>'.
   * @see org.xtext.cPHLCL.Enumeration#getList()
   * @see #getEnumeration()
   * @generated
   */
  EReference getEnumeration_List();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see org.xtext.cPHLCL.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Constraint#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.cPHLCL.Constraint#getName()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Constraint#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.cPHLCL.Constraint#getExp()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.cPHLCL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.BoolExpression <em>Bool Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Expression</em>'.
   * @see org.xtext.cPHLCL.BoolExpression
   * @generated
   */
  EClass getBoolExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.ComplexTerm <em>Complex Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Complex Term</em>'.
   * @see org.xtext.cPHLCL.ComplexTerm
   * @generated
   */
  EClass getComplexTerm();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Logic <em>Logic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logic</em>'.
   * @see org.xtext.cPHLCL.Logic
   * @generated
   */
  EClass getLogic();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Logic#getLogicLeft <em>Logic Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Logic Left</em>'.
   * @see org.xtext.cPHLCL.Logic#getLogicLeft()
   * @see #getLogic()
   * @generated
   */
  EReference getLogic_LogicLeft();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Logic#getLogicOp <em>Logic Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Logic Op</em>'.
   * @see org.xtext.cPHLCL.Logic#getLogicOp()
   * @see #getLogic()
   * @generated
   */
  EAttribute getLogic_LogicOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Logic#getLogicRight <em>Logic Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Logic Right</em>'.
   * @see org.xtext.cPHLCL.Logic#getLogicRight()
   * @see #getLogic()
   * @generated
   */
  EReference getLogic_LogicRight();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.LogicUn <em>Logic Un</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Logic Un</em>'.
   * @see org.xtext.cPHLCL.LogicUn
   * @generated
   */
  EClass getLogicUn();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.LogicUn#getLogicOp <em>Logic Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Logic Op</em>'.
   * @see org.xtext.cPHLCL.LogicUn#getLogicOp()
   * @see #getLogicUn()
   * @generated
   */
  EAttribute getLogicUn_LogicOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.LogicUn#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.cPHLCL.LogicUn#getExp()
   * @see #getLogicUn()
   * @generated
   */
  EReference getLogicUn_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Relational <em>Relational</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relational</em>'.
   * @see org.xtext.cPHLCL.Relational
   * @generated
   */
  EClass getRelational();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Relational#getRelationalLeft <em>Relational Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Relational Left</em>'.
   * @see org.xtext.cPHLCL.Relational#getRelationalLeft()
   * @see #getRelational()
   * @generated
   */
  EReference getRelational_RelationalLeft();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Relational#getRelationalOp <em>Relational Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Relational Op</em>'.
   * @see org.xtext.cPHLCL.Relational#getRelationalOp()
   * @see #getRelational()
   * @generated
   */
  EAttribute getRelational_RelationalOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Relational#getRelationalRight <em>Relational Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Relational Right</em>'.
   * @see org.xtext.cPHLCL.Relational#getRelationalRight()
   * @see #getRelational()
   * @generated
   */
  EReference getRelational_RelationalRight();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.NumExpression <em>Num Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Num Expression</em>'.
   * @see org.xtext.cPHLCL.NumExpression
   * @generated
   */
  EClass getNumExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Arithmetic <em>Arithmetic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic</em>'.
   * @see org.xtext.cPHLCL.Arithmetic
   * @generated
   */
  EClass getArithmetic();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Arithmetic#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.cPHLCL.Arithmetic#getLeft()
   * @see #getArithmetic()
   * @generated
   */
  EReference getArithmetic_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Arithmetic#getArithOperator <em>Arith Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Arith Operator</em>'.
   * @see org.xtext.cPHLCL.Arithmetic#getArithOperator()
   * @see #getArithmetic()
   * @generated
   */
  EAttribute getArithmetic_ArithOperator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Arithmetic#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.cPHLCL.Arithmetic#getRight()
   * @see #getArithmetic()
   * @generated
   */
  EReference getArithmetic_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Global <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Global</em>'.
   * @see org.xtext.cPHLCL.Global
   * @generated
   */
  EClass getGlobal();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Global#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.cPHLCL.Global#getOp()
   * @see #getGlobal()
   * @generated
   */
  EAttribute getGlobal_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Global#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vars</em>'.
   * @see org.xtext.cPHLCL.Global#getVars()
   * @see #getGlobal()
   * @generated
   */
  EReference getGlobal_Vars();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Control <em>Control</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Control</em>'.
   * @see org.xtext.cPHLCL.Control
   * @generated
   */
  EClass getControl();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Control#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.cPHLCL.Control#getCond()
   * @see #getControl()
   * @generated
   */
  EReference getControl_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Control#getTrueStatement <em>True Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>True Statement</em>'.
   * @see org.xtext.cPHLCL.Control#getTrueStatement()
   * @see #getControl()
   * @generated
   */
  EReference getControl_TrueStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.cPHLCL.Control#getElseStatement <em>Else Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else Statement</em>'.
   * @see org.xtext.cPHLCL.Control#getElseStatement()
   * @see #getControl()
   * @generated
   */
  EReference getControl_ElseStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Bool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool</em>'.
   * @see org.xtext.cPHLCL.Bool
   * @generated
   */
  EClass getBool();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Bool#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see org.xtext.cPHLCL.Bool#getVal()
   * @see #getBool()
   * @generated
   */
  EAttribute getBool_Val();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.BoolVar <em>Bool Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bool Var</em>'.
   * @see org.xtext.cPHLCL.BoolVar
   * @generated
   */
  EClass getBoolVar();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.BoolVar#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.cPHLCL.BoolVar#getId()
   * @see #getBoolVar()
   * @generated
   */
  EAttribute getBoolVar_Id();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.Number <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number</em>'.
   * @see org.xtext.cPHLCL.Number
   * @generated
   */
  EClass getNumber();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.Number#getNum <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num</em>'.
   * @see org.xtext.cPHLCL.Number#getNum()
   * @see #getNumber()
   * @generated
   */
  EAttribute getNumber_Num();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.IntVar <em>Int Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Var</em>'.
   * @see org.xtext.cPHLCL.IntVar
   * @generated
   */
  EClass getIntVar();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.cPHLCL.IntVar#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see org.xtext.cPHLCL.IntVar#getId()
   * @see #getIntVar()
   * @generated
   */
  EAttribute getIntVar_Id();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.ListOfValues <em>List Of Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Of Values</em>'.
   * @see org.xtext.cPHLCL.ListOfValues
   * @generated
   */
  EClass getListOfValues();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.cPHLCL.ListOfValues#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Values</em>'.
   * @see org.xtext.cPHLCL.ListOfValues#getValues()
   * @see #getListOfValues()
   * @generated
   */
  EAttribute getListOfValues_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.ListOfEnumerables <em>List Of Enumerables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Of Enumerables</em>'.
   * @see org.xtext.cPHLCL.ListOfEnumerables
   * @generated
   */
  EClass getListOfEnumerables();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.cPHLCL.ListOfEnumerables#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Values</em>'.
   * @see org.xtext.cPHLCL.ListOfEnumerables#getValues()
   * @see #getListOfEnumerables()
   * @generated
   */
  EAttribute getListOfEnumerables_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.cPHLCL.ListOfIDs <em>List Of IDs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Of IDs</em>'.
   * @see org.xtext.cPHLCL.ListOfIDs
   * @generated
   */
  EClass getListOfIDs();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.cPHLCL.ListOfIDs#getIds <em>Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Ids</em>'.
   * @see org.xtext.cPHLCL.ListOfIDs#getIds()
   * @see #getListOfIDs()
   * @generated
   */
  EAttribute getListOfIDs_Ids();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CPHLCLFactory getCPHLCLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ModelImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__VARS = eINSTANCE.getModel_Vars();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CONSTRAINTS = eINSTANCE.getModel_Constraints();

    /**
     * The meta object literal for the '<em><b>Strategy</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__STRATEGY = eINSTANCE.getModel_Strategy();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.VarDeclarationImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__TYPE = eINSTANCE.getVarDeclaration_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__NAME = eINSTANCE.getVarDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Domain</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__DOMAIN = eINSTANCE.getVarDeclaration_Domain();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.DomainDeclarationImpl <em>Domain Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.DomainDeclarationImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getDomainDeclaration()
     * @generated
     */
    EClass DOMAIN_DECLARATION = eINSTANCE.getDomainDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.IntervalImpl <em>Interval</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.IntervalImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getInterval()
     * @generated
     */
    EClass INTERVAL = eINSTANCE.getInterval();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INTERVAL__START = eINSTANCE.getInterval_Start();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INTERVAL__END = eINSTANCE.getInterval_End();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.EnumerationImpl <em>Enumeration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.EnumerationImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getEnumeration()
     * @generated
     */
    EClass ENUMERATION = eINSTANCE.getEnumeration();

    /**
     * The meta object literal for the '<em><b>List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATION__LIST = eINSTANCE.getEnumeration_List();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ConstraintImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__NAME = eINSTANCE.getConstraint_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__EXP = eINSTANCE.getConstraint_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ExpressionImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.BoolExpressionImpl <em>Bool Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.BoolExpressionImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBoolExpression()
     * @generated
     */
    EClass BOOL_EXPRESSION = eINSTANCE.getBoolExpression();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ComplexTermImpl <em>Complex Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ComplexTermImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getComplexTerm()
     * @generated
     */
    EClass COMPLEX_TERM = eINSTANCE.getComplexTerm();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.LogicImpl <em>Logic</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.LogicImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getLogic()
     * @generated
     */
    EClass LOGIC = eINSTANCE.getLogic();

    /**
     * The meta object literal for the '<em><b>Logic Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGIC__LOGIC_LEFT = eINSTANCE.getLogic_LogicLeft();

    /**
     * The meta object literal for the '<em><b>Logic Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOGIC__LOGIC_OP = eINSTANCE.getLogic_LogicOp();

    /**
     * The meta object literal for the '<em><b>Logic Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGIC__LOGIC_RIGHT = eINSTANCE.getLogic_LogicRight();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.LogicUnImpl <em>Logic Un</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.LogicUnImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getLogicUn()
     * @generated
     */
    EClass LOGIC_UN = eINSTANCE.getLogicUn();

    /**
     * The meta object literal for the '<em><b>Logic Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOGIC_UN__LOGIC_OP = eINSTANCE.getLogicUn_LogicOp();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOGIC_UN__EXP = eINSTANCE.getLogicUn_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.RelationalImpl <em>Relational</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.RelationalImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getRelational()
     * @generated
     */
    EClass RELATIONAL = eINSTANCE.getRelational();

    /**
     * The meta object literal for the '<em><b>Relational Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONAL__RELATIONAL_LEFT = eINSTANCE.getRelational_RelationalLeft();

    /**
     * The meta object literal for the '<em><b>Relational Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONAL__RELATIONAL_OP = eINSTANCE.getRelational_RelationalOp();

    /**
     * The meta object literal for the '<em><b>Relational Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONAL__RELATIONAL_RIGHT = eINSTANCE.getRelational_RelationalRight();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.NumExpressionImpl <em>Num Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.NumExpressionImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getNumExpression()
     * @generated
     */
    EClass NUM_EXPRESSION = eINSTANCE.getNumExpression();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ArithmeticImpl <em>Arithmetic</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ArithmeticImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getArithmetic()
     * @generated
     */
    EClass ARITHMETIC = eINSTANCE.getArithmetic();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC__LEFT = eINSTANCE.getArithmetic_Left();

    /**
     * The meta object literal for the '<em><b>Arith Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARITHMETIC__ARITH_OPERATOR = eINSTANCE.getArithmetic_ArithOperator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC__RIGHT = eINSTANCE.getArithmetic_Right();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.GlobalImpl <em>Global</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.GlobalImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getGlobal()
     * @generated
     */
    EClass GLOBAL = eINSTANCE.getGlobal();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GLOBAL__OP = eINSTANCE.getGlobal_Op();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GLOBAL__VARS = eINSTANCE.getGlobal_Vars();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ControlImpl <em>Control</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ControlImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getControl()
     * @generated
     */
    EClass CONTROL = eINSTANCE.getControl();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTROL__COND = eINSTANCE.getControl_Cond();

    /**
     * The meta object literal for the '<em><b>True Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTROL__TRUE_STATEMENT = eINSTANCE.getControl_TrueStatement();

    /**
     * The meta object literal for the '<em><b>Else Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTROL__ELSE_STATEMENT = eINSTANCE.getControl_ElseStatement();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.BoolImpl <em>Bool</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.BoolImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBool()
     * @generated
     */
    EClass BOOL = eINSTANCE.getBool();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL__VAL = eINSTANCE.getBool_Val();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.BoolVarImpl <em>Bool Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.BoolVarImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getBoolVar()
     * @generated
     */
    EClass BOOL_VAR = eINSTANCE.getBoolVar();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_VAR__ID = eINSTANCE.getBoolVar_Id();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.NumberImpl <em>Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.NumberImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getNumber()
     * @generated
     */
    EClass NUMBER = eINSTANCE.getNumber();

    /**
     * The meta object literal for the '<em><b>Num</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER__NUM = eINSTANCE.getNumber_Num();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.IntVarImpl <em>Int Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.IntVarImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getIntVar()
     * @generated
     */
    EClass INT_VAR = eINSTANCE.getIntVar();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_VAR__ID = eINSTANCE.getIntVar_Id();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ListOfValuesImpl <em>List Of Values</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ListOfValuesImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfValues()
     * @generated
     */
    EClass LIST_OF_VALUES = eINSTANCE.getListOfValues();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_OF_VALUES__VALUES = eINSTANCE.getListOfValues_Values();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ListOfEnumerablesImpl <em>List Of Enumerables</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ListOfEnumerablesImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfEnumerables()
     * @generated
     */
    EClass LIST_OF_ENUMERABLES = eINSTANCE.getListOfEnumerables();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_OF_ENUMERABLES__VALUES = eINSTANCE.getListOfEnumerables_Values();

    /**
     * The meta object literal for the '{@link org.xtext.cPHLCL.impl.ListOfIDsImpl <em>List Of IDs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.cPHLCL.impl.ListOfIDsImpl
     * @see org.xtext.cPHLCL.impl.CPHLCLPackageImpl#getListOfIDs()
     * @generated
     */
    EClass LIST_OF_IDS = eINSTANCE.getListOfIDs();

    /**
     * The meta object literal for the '<em><b>Ids</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LIST_OF_IDS__IDS = eINSTANCE.getListOfIDs_Ids();

  }

} //CPHLCLPackage
