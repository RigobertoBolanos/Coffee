/**
 * generated by Xtext 2.12.0
 */
package org.xtext.cPHLCL;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Control</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.cPHLCL.Control#getCond <em>Cond</em>}</li>
 *   <li>{@link org.xtext.cPHLCL.Control#getTrueStatement <em>True Statement</em>}</li>
 *   <li>{@link org.xtext.cPHLCL.Control#getElseStatement <em>Else Statement</em>}</li>
 * </ul>
 *
 * @see org.xtext.cPHLCL.CPHLCLPackage#getControl()
 * @model
 * @generated
 */
public interface Control extends Expression
{
  /**
   * Returns the value of the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cond</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cond</em>' containment reference.
   * @see #setCond(BoolExpression)
   * @see org.xtext.cPHLCL.CPHLCLPackage#getControl_Cond()
   * @model containment="true"
   * @generated
   */
  BoolExpression getCond();

  /**
   * Sets the value of the '{@link org.xtext.cPHLCL.Control#getCond <em>Cond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cond</em>' containment reference.
   * @see #getCond()
   * @generated
   */
  void setCond(BoolExpression value);

  /**
   * Returns the value of the '<em><b>True Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>True Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>True Statement</em>' containment reference.
   * @see #setTrueStatement(Expression)
   * @see org.xtext.cPHLCL.CPHLCLPackage#getControl_TrueStatement()
   * @model containment="true"
   * @generated
   */
  Expression getTrueStatement();

  /**
   * Sets the value of the '{@link org.xtext.cPHLCL.Control#getTrueStatement <em>True Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>True Statement</em>' containment reference.
   * @see #getTrueStatement()
   * @generated
   */
  void setTrueStatement(Expression value);

  /**
   * Returns the value of the '<em><b>Else Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Else Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Statement</em>' containment reference.
   * @see #setElseStatement(Expression)
   * @see org.xtext.cPHLCL.CPHLCLPackage#getControl_ElseStatement()
   * @model containment="true"
   * @generated
   */
  Expression getElseStatement();

  /**
   * Sets the value of the '{@link org.xtext.cPHLCL.Control#getElseStatement <em>Else Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Statement</em>' containment reference.
   * @see #getElseStatement()
   * @generated
   */
  void setElseStatement(Expression value);

} // Control
