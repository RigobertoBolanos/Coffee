/**
 * generated by Xtext 2.12.0
 */
package org.xtext.hLCLSpecificationLanguage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.hLCLSpecificationLanguage.HLCLSpecificationLanguageFactory
 * @model kind="package"
 * @generated
 */
public interface HLCLSpecificationLanguagePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "hLCLSpecificationLanguage";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/HLCLSpecificationLanguage";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "hLCLSpecificationLanguage";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  HLCLSpecificationLanguagePackage eINSTANCE = org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.ModelImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__VARS = 1;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CONSTRAINTS = 2;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.VarDeclarationImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 1;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ModifierImpl <em>Modifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.ModifierImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getModifier()
   * @generated
   */
  int MODIFIER = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFIER__NAME = VAR_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFIER__DOM = VAR_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Instantiable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFIER__INSTANTIABLE = VAR_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFIER__TYPE = VAR_DECLARATION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Modifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFIER_FEATURE_COUNT = VAR_DECLARATION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VariantDeclarationImpl <em>Variant Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.VariantDeclarationImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVariantDeclaration()
   * @generated
   */
  int VARIANT_DECLARATION = 3;

  /**
   * The number of structural features of the '<em>Variant Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_DECLARATION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.variantsIntervalImpl <em>variants Interval</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.variantsIntervalImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getvariantsInterval()
   * @generated
   */
  int VARIANTS_INTERVAL = 4;

  /**
   * The feature id for the '<em><b>Start</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL__START = VARIANT_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>End</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL__END = VARIANT_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>variants Interval</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_INTERVAL_FEATURE_COUNT = VARIANT_DECLARATION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.variantsEnumerationImpl <em>variants Enumeration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.variantsEnumerationImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getvariantsEnumeration()
   * @generated
   */
  int VARIANTS_ENUMERATION = 5;

  /**
   * The feature id for the '<em><b>List</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_ENUMERATION__LIST = VARIANT_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>variants Enumeration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANTS_ENUMERATION_FEATURE_COUNT = VARIANT_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ConstraintImpl <em>Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.ConstraintImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getConstraint()
   * @generated
   */
  int CONSTRAINT = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT__EXP = 1;

  /**
   * The number of structural features of the '<em>Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.ExpressionImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 8;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ConsExpressionImpl <em>Cons Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.ConsExpressionImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getConsExpression()
   * @generated
   */
  int CONS_EXPRESSION = 7;

  /**
   * The number of structural features of the '<em>Cons Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.IDConsImpl <em>ID Cons</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.IDConsImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getIDCons()
   * @generated
   */
  int ID_CONS = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_CONS__NAME = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>ID Cons</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_CONS_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.RefinementImpl <em>Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.RefinementImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getRefinement()
   * @generated
   */
  int REFINEMENT = 10;

  /**
   * The number of structural features of the '<em>Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REFINEMENT_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.AssignmentImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 11;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VAR = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VALUE = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VarRefinementImpl <em>Var Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.VarRefinementImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVarRefinement()
   * @generated
   */
  int VAR_REFINEMENT = 12;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT__VAR = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Variants</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT__VARIANTS = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Var Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFINEMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.SetRefinementImpl <em>Set Refinement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.SetRefinementImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getSetRefinement()
   * @generated
   */
  int SET_REFINEMENT = 13;

  /**
   * The feature id for the '<em><b>Vars</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__VARS = REFINEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Head</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__HEAD = REFINEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Tail</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT__TAIL = REFINEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Set Refinement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_REFINEMENT_FEATURE_COUNT = REFINEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.RuleImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getRule()
   * @generated
   */
  int RULE = 14;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__CONDITION = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Consequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__CONSEQUENCE = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.hLCLSpecificationLanguage.impl.SPLNotationImpl <em>SPL Notation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.hLCLSpecificationLanguage.impl.SPLNotationImpl
   * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getSPLNotation()
   * @generated
   */
  int SPL_NOTATION = 15;

  /**
   * The feature id for the '<em><b>Var1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPL_NOTATION__VAR1 = CONS_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPL_NOTATION__OP = CONS_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Var2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPL_NOTATION__VAR2 = CONS_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>SPL Notation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPL_NOTATION_FEATURE_COUNT = CONS_EXPRESSION_FEATURE_COUNT + 3;


  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.hLCLSpecificationLanguage.Model#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Model#getVars()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Vars();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.hLCLSpecificationLanguage.Model#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constraints</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Model#getConstraints()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Constraints();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Modifier <em>Modifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modifier</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Modifier
   * @generated
   */
  EClass getModifier();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Modifier#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Modifier#getName()
   * @see #getModifier()
   * @generated
   */
  EAttribute getModifier_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.hLCLSpecificationLanguage.Modifier#getDom <em>Dom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dom</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Modifier#getDom()
   * @see #getModifier()
   * @generated
   */
  EReference getModifier_Dom();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Modifier#isInstantiable <em>Instantiable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Instantiable</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Modifier#isInstantiable()
   * @see #getModifier()
   * @generated
   */
  EAttribute getModifier_Instantiable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Modifier#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Modifier#getType()
   * @see #getModifier()
   * @generated
   */
  EAttribute getModifier_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.VariantDeclaration <em>Variant Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variant Declaration</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.VariantDeclaration
   * @generated
   */
  EClass getVariantDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.variantsInterval <em>variants Interval</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variants Interval</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.variantsInterval
   * @generated
   */
  EClass getvariantsInterval();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.variantsInterval#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Start</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.variantsInterval#getStart()
   * @see #getvariantsInterval()
   * @generated
   */
  EAttribute getvariantsInterval_Start();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.variantsInterval#getEnd <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.variantsInterval#getEnd()
   * @see #getvariantsInterval()
   * @generated
   */
  EAttribute getvariantsInterval_End();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.variantsEnumeration <em>variants Enumeration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variants Enumeration</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.variantsEnumeration
   * @generated
   */
  EClass getvariantsEnumeration();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.hLCLSpecificationLanguage.variantsEnumeration#getList <em>List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>List</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.variantsEnumeration#getList()
   * @see #getvariantsEnumeration()
   * @generated
   */
  EAttribute getvariantsEnumeration_List();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Constraint <em>Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraint</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Constraint
   * @generated
   */
  EClass getConstraint();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Constraint#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Constraint#getName()
   * @see #getConstraint()
   * @generated
   */
  EAttribute getConstraint_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.hLCLSpecificationLanguage.Constraint#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Constraint#getExp()
   * @see #getConstraint()
   * @generated
   */
  EReference getConstraint_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.ConsExpression <em>Cons Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cons Expression</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.ConsExpression
   * @generated
   */
  EClass getConsExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.IDCons <em>ID Cons</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ID Cons</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.IDCons
   * @generated
   */
  EClass getIDCons();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.IDCons#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.IDCons#getName()
   * @see #getIDCons()
   * @generated
   */
  EAttribute getIDCons_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Refinement <em>Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Refinement</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Refinement
   * @generated
   */
  EClass getRefinement();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Assignment#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Assignment#getVar()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Var();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.Assignment#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Assignment#getValue()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.VarRefinement <em>Var Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Refinement</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.VarRefinement
   * @generated
   */
  EClass getVarRefinement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.VarRefinement#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.VarRefinement#getVar()
   * @see #getVarRefinement()
   * @generated
   */
  EAttribute getVarRefinement_Var();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.hLCLSpecificationLanguage.VarRefinement#getVariants <em>Variants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variants</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.VarRefinement#getVariants()
   * @see #getVarRefinement()
   * @generated
   */
  EReference getVarRefinement_Variants();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.SetRefinement <em>Set Refinement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Refinement</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SetRefinement
   * @generated
   */
  EClass getSetRefinement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.SetRefinement#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Vars</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SetRefinement#getVars()
   * @see #getSetRefinement()
   * @generated
   */
  EAttribute getSetRefinement_Vars();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.SetRefinement#getHead <em>Head</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Head</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SetRefinement#getHead()
   * @see #getSetRefinement()
   * @generated
   */
  EAttribute getSetRefinement_Head();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.hLCLSpecificationLanguage.SetRefinement#getTail <em>Tail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Tail</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SetRefinement#getTail()
   * @see #getSetRefinement()
   * @generated
   */
  EAttribute getSetRefinement_Tail();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.hLCLSpecificationLanguage.Rule#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Rule#getCondition()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.hLCLSpecificationLanguage.Rule#getConsequence <em>Consequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Consequence</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.Rule#getConsequence()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Consequence();

  /**
   * Returns the meta object for class '{@link org.xtext.hLCLSpecificationLanguage.SPLNotation <em>SPL Notation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>SPL Notation</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SPLNotation
   * @generated
   */
  EClass getSPLNotation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.SPLNotation#getVar1 <em>Var1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var1</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SPLNotation#getVar1()
   * @see #getSPLNotation()
   * @generated
   */
  EAttribute getSPLNotation_Var1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.SPLNotation#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SPLNotation#getOp()
   * @see #getSPLNotation()
   * @generated
   */
  EAttribute getSPLNotation_Op();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.hLCLSpecificationLanguage.SPLNotation#getVar2 <em>Var2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var2</em>'.
   * @see org.xtext.hLCLSpecificationLanguage.SPLNotation#getVar2()
   * @see #getSPLNotation()
   * @generated
   */
  EAttribute getSPLNotation_Var2();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  HLCLSpecificationLanguageFactory getHLCLSpecificationLanguageFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.ModelImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__VARS = eINSTANCE.getModel_Vars();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CONSTRAINTS = eINSTANCE.getModel_Constraints();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.VarDeclarationImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ModifierImpl <em>Modifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.ModifierImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getModifier()
     * @generated
     */
    EClass MODIFIER = eINSTANCE.getModifier();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODIFIER__NAME = eINSTANCE.getModifier_Name();

    /**
     * The meta object literal for the '<em><b>Dom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFIER__DOM = eINSTANCE.getModifier_Dom();

    /**
     * The meta object literal for the '<em><b>Instantiable</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODIFIER__INSTANTIABLE = eINSTANCE.getModifier_Instantiable();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODIFIER__TYPE = eINSTANCE.getModifier_Type();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VariantDeclarationImpl <em>Variant Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.VariantDeclarationImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVariantDeclaration()
     * @generated
     */
    EClass VARIANT_DECLARATION = eINSTANCE.getVariantDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.variantsIntervalImpl <em>variants Interval</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.variantsIntervalImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getvariantsInterval()
     * @generated
     */
    EClass VARIANTS_INTERVAL = eINSTANCE.getvariantsInterval();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANTS_INTERVAL__START = eINSTANCE.getvariantsInterval_Start();

    /**
     * The meta object literal for the '<em><b>End</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANTS_INTERVAL__END = eINSTANCE.getvariantsInterval_End();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.variantsEnumerationImpl <em>variants Enumeration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.variantsEnumerationImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getvariantsEnumeration()
     * @generated
     */
    EClass VARIANTS_ENUMERATION = eINSTANCE.getvariantsEnumeration();

    /**
     * The meta object literal for the '<em><b>List</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANTS_ENUMERATION__LIST = eINSTANCE.getvariantsEnumeration_List();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ConstraintImpl <em>Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.ConstraintImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getConstraint()
     * @generated
     */
    EClass CONSTRAINT = eINSTANCE.getConstraint();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRAINT__NAME = eINSTANCE.getConstraint_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINT__EXP = eINSTANCE.getConstraint_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ConsExpressionImpl <em>Cons Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.ConsExpressionImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getConsExpression()
     * @generated
     */
    EClass CONS_EXPRESSION = eINSTANCE.getConsExpression();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.ExpressionImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.IDConsImpl <em>ID Cons</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.IDConsImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getIDCons()
     * @generated
     */
    EClass ID_CONS = eINSTANCE.getIDCons();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ID_CONS__NAME = eINSTANCE.getIDCons_Name();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.RefinementImpl <em>Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.RefinementImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getRefinement()
     * @generated
     */
    EClass REFINEMENT = eINSTANCE.getRefinement();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.AssignmentImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__VAR = eINSTANCE.getAssignment_Var();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__VALUE = eINSTANCE.getAssignment_Value();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.VarRefinementImpl <em>Var Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.VarRefinementImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getVarRefinement()
     * @generated
     */
    EClass VAR_REFINEMENT = eINSTANCE.getVarRefinement();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_REFINEMENT__VAR = eINSTANCE.getVarRefinement_Var();

    /**
     * The meta object literal for the '<em><b>Variants</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_REFINEMENT__VARIANTS = eINSTANCE.getVarRefinement_Variants();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.SetRefinementImpl <em>Set Refinement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.SetRefinementImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getSetRefinement()
     * @generated
     */
    EClass SET_REFINEMENT = eINSTANCE.getSetRefinement();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_REFINEMENT__VARS = eINSTANCE.getSetRefinement_Vars();

    /**
     * The meta object literal for the '<em><b>Head</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_REFINEMENT__HEAD = eINSTANCE.getSetRefinement_Head();

    /**
     * The meta object literal for the '<em><b>Tail</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_REFINEMENT__TAIL = eINSTANCE.getSetRefinement_Tail();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.RuleImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__CONDITION = eINSTANCE.getRule_Condition();

    /**
     * The meta object literal for the '<em><b>Consequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__CONSEQUENCE = eINSTANCE.getRule_Consequence();

    /**
     * The meta object literal for the '{@link org.xtext.hLCLSpecificationLanguage.impl.SPLNotationImpl <em>SPL Notation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.hLCLSpecificationLanguage.impl.SPLNotationImpl
     * @see org.xtext.hLCLSpecificationLanguage.impl.HLCLSpecificationLanguagePackageImpl#getSPLNotation()
     * @generated
     */
    EClass SPL_NOTATION = eINSTANCE.getSPLNotation();

    /**
     * The meta object literal for the '<em><b>Var1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPL_NOTATION__VAR1 = eINSTANCE.getSPLNotation_Var1();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPL_NOTATION__OP = eINSTANCE.getSPLNotation_Op();

    /**
     * The meta object literal for the '<em><b>Var2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPL_NOTATION__VAR2 = eINSTANCE.getSPLNotation_Var2();

  }

} //HLCLSpecificationLanguagePackage
